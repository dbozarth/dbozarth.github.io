{"version":3,"sources":["webpack:///./node_modules/hammerjs/hammer.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/company/main/details/details.component.css","webpack:///./src/app/company/main/details/details.component.html","webpack:///./src/app/company/main/details/details.component.ts","webpack:///./src/app/company/main/documents/documents.component.css","webpack:///./src/app/company/main/documents/documents.component.html","webpack:///./src/app/company/main/documents/documents.component.ts","webpack:///./src/app/company/main/edit/edit.component.css","webpack:///./src/app/company/main/edit/edit.component.html","webpack:///./src/app/company/main/edit/edit.component.ts","webpack:///./src/app/company/main/settings/settings.component.css","webpack:///./src/app/company/main/settings/settings.component.html","webpack:///./src/app/company/main/settings/settings.component.ts","webpack:///./src/app/company/site/details/site-details.component.css","webpack:///./src/app/company/site/details/site-details.component.html","webpack:///./src/app/company/site/details/site-details.component.ts","webpack:///./src/app/company/site/edit/site-edit.component.css","webpack:///./src/app/company/site/edit/site-edit.component.html","webpack:///./src/app/company/site/edit/site-edit.component.ts","webpack:///./src/app/company/site/jobs/add/job-add.component.css","webpack:///./src/app/company/site/jobs/add/job-add.component.html","webpack:///./src/app/company/site/jobs/add/job-add.component.ts","webpack:///./src/app/company/site/jobs/edit/edit-job.component.css","webpack:///./src/app/company/site/jobs/edit/edit-job.component.html","webpack:///./src/app/company/site/jobs/edit/edit-job.component.ts","webpack:///./src/app/company/site/jobs/lists/list-jobs.component.css","webpack:///./src/app/company/site/jobs/lists/list-jobs.component.html","webpack:///./src/app/company/site/jobs/lists/list-jobs.component.ts","webpack:///./src/app/company/site/jobs/show/show-job.component.css","webpack:///./src/app/company/site/jobs/show/show-job.component.html","webpack:///./src/app/company/site/jobs/show/show-job.component.ts","webpack:///./src/app/modules/angular-material.module.ts","webpack:///./src/app/my-nav/my-nav.component.css","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/services/job.service.ts","webpack:///./src/app/services/ngb-date-firestore-adapter.service.ts","webpack:///./src/app/services/site.service.ts","webpack:///./src/app/static/footer/footer.component.css","webpack:///./src/app/static/footer/footer.component.html","webpack:///./src/app/static/footer/footer.component.ts","webpack:///./src/app/static/navbar/navbar.component.html","webpack:///./src/app/static/navbar/navbar.component.scss","webpack:///./src/app/static/navbar/navbar.component.ts","webpack:///./src/app/static/sidenav/sidenav.component.css","webpack:///./src/app/static/sidenav/sidenav.component.html","webpack:///./src/app/static/sidenav/sidenav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO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","file":"main.js","sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { DetailsComponent } from './company/main/details/details.component';\nimport { EditComponent } from './company/main/edit/edit.component';\nimport { SiteDetailsComponent } from './company/site/details/site-details.component';\nimport { SiteEditComponent } from './company/site/edit/site-edit.component';\nimport { JobAddComponent } from './company/site/jobs/add/job-add.component';\nimport { EditJobComponent } from './company/site/jobs/edit/edit-job.component';\nimport { ShowJobComponent } from './company/site/jobs/show/show-job.component';\nimport { ListJobsComponent } from './company/site/jobs/lists/list-jobs.component';\n\n\nconst routes: Routes = [\n  { path: 'company', component: DetailsComponent },\n  { path: 'company/edit/:id', component: EditComponent },\n  { path: 'company/site/:id', component: SiteDetailsComponent },\n  { path: 'company/site/edit/:id', component: SiteEditComponent },\n  { path: 'company/site/job/add/:id', component: JobAddComponent },\n  { path: 'company/site/job/edit/:id', component: EditJobComponent },\n  { path: 'company/site/job/show/:id', component: ShowJobComponent },\n  { path: 'company/site/job/list/:id', component: ListJobsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".section-bg {\\n  background-color: inherit;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWN0aW9uLWJnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbn1cbiJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\\n<app-sidenav></app-sidenav>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'uikit-firebase-admin';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/Forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\n\nimport { NgbDateAdapter, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateFirestoreAdapter } from './services/ngb-date-firestore-adapter.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './modules/angular-material.module';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './static/navbar/navbar.component';\nimport { SidenavComponent } from './static/sidenav/sidenav.component';\nimport { FooterComponent } from './static/footer/footer.component';\nimport { DetailsComponent } from './company/main/details/details.component';\nimport { EditComponent } from './company/main/edit/edit.component';\nimport { SettingsComponent } from './company/main/settings/settings.component';\nimport { DocumentsComponent } from './company/main/documents/documents.component';\nimport { SiteDetailsComponent } from './company/site/details/site-details.component';\nimport { SiteEditComponent } from './company/site/edit/site-edit.component';\nimport { JobAddComponent } from './company/site/jobs/add/job-add.component';\nimport { EditJobComponent } from './company/site/jobs/edit/edit-job.component';\nimport { ShowJobComponent } from './company/site/jobs/show/show-job.component';\nimport { ListJobsComponent } from './company/site/jobs/lists/list-jobs.component';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidenavComponent,\n    FooterComponent,\n    DetailsComponent,\n    EditComponent,\n    SettingsComponent,\n    DocumentsComponent,\n    SiteDetailsComponent,\n    SiteEditComponent,\n    JobAddComponent,\n    EditJobComponent,\n    ShowJobComponent,\n    ListJobsComponent,\n    MyNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    BrowserAnimationsModule,\n    NgbModule\n  ],\n  providers: [\n    { provide: NgbDateAdapter, useClass: NgbDateFirestoreAdapter }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".footer-bg-f {\\n  background: linear-gradient(to left, #f5f5f5, #eff1f3);\\n}\\n\\n.nav-tabs .nav-link.active {\\n  color: #170558;\\n}\\n\\n.footer-bg {\\n  background-color: #fdfdfd;\\n}\\n\\na:hover {\\n  color: dimgray;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcGFueS9tYWluL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0RBQXNEO0FBQ3hEOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wYW55L21haW4vZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyLWJnLWYge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgI2Y1ZjVmNSwgI2VmZjFmMyk7XG59XG5cbi5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgY29sb3I6ICMxNzA1NTg7XG59XG5cbi5mb290ZXItYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xufVxuXG5hOmhvdmVyIHtcbiAgY29sb3I6IGRpbWdyYXk7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container uk-margin-medium-bottom\\\" *ngFor=\\\"let main of mainCompany\\\">\\n    <div class=\\\"uk-card uk-card-default\\\">\\n        <div class=\\\"uk-card-header bg-info\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons pr-1\\\">place</i>Main Company - {{main.company_name}}</h5>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">my_location</i>Main Campus Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_city}}, {{main.main_state}}, {{main.main_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Main Phone: {{main.main_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Main Email: {{main.main_email}}</li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">directions_boat</i>Ship To Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.shipping_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.shipping_city}}, {{main.shipping_state}}, {{main.shipping_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.shipping_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Phone: {{main.shipping_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Email: {{main.shipping_email}}</li>\\n\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Main Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_contact}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_contact_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_contact_email}}</li>\\n\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Human Resources Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_hr_contact}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_hr_contact_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{main.main_hr_contact_email}}</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-card-footer d-flex justify-content-between footer-bg\\\">\\n            <a routerLink=\\\"/company/edit/{{main.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-create ml-1 mr-1\\\"></i>edit</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>jobs</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pulse ml-1 mr-1\\\"></i>stats</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-switch ml-1 mr-1\\\"></i>settings</a>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"container uk-margin-medium-bottom\\\" *ngFor=\\\"let site of sites\\\">\\n    <div class=\\\"uk-card uk-card-default\\\">\\n        <div class=\\\"uk-card-header bg-info\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons pr-1\\\">place</i>Site Location - {{site.site_name}}</h5>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">my_location</i>Campus Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_name}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_city}}, {{site.site_state}}, {{site.site_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Phone: {{site.site_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Email: {{site.site_email}}</li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">directions_boat</i>Ship To Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_name}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_city}}, {{site.site_ship_to_state}}, {{site.site_ship_to_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Phone: {{site.site_ship_to_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Email: {{site.site_ship_to_email}}</li>\\n\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Main Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact_first_name}} {{site.site_contact_last_name}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact_email}}</li>\\n\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Maintenance Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_contact}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_email}}</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-card-footer d-flex justify-content-between footer-bg\\\">\\n            <a routerLink=\\\"/company/site/edit/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-create ml-1 mr-1\\\"></i>edit</a>\\n            <a routerLink=\\\"/company/site/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>jobs</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pulse ml-1 mr-1\\\"></i>stats</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-switch ml-1 mr-1\\\"></i>settings</a>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { SiteService } from '../../../services/site.service';\n\nimport { Site } from '../../../models/site';\nimport { Main } from '../../../models/main';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  mainCompany: Main[];\n  sites: Site[];\n\n  constructor(private ss: SiteService) { }\n\n  ngOnInit() {\n    this.ss.getMains().subscribe(mainCompany => {\n      this.mainCompany = mainCompany;\n    });\n    this.ss.getSites().subscribe(sites => {\n      this.sites = sites;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvbWFpbi9kb2N1bWVudHMvZG9jdW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  documents works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css']\n})\nexport class DocumentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvbWFpbi9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container uk-margin-small-bottom\\\">\\n  <div class=\\\"uk-card uk-card-default\\\">\\n    <div class=\\\"uk-card-header bg-info\\\">\\n        <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n            <div class=\\\"uk-width-expand\\\">\\n                <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons uk-text-white mr-1\\\">my_location</i>Main Campus Details - Edit</h5>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"uk-card-body\\\">\\n      <small class=\\\"uk-text-muted\\\">Please make required changes and submit to to save them.</small>\\n      <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">my_location</i>Campus Location Details</h6>\\n        <form #mainForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(mainForm)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"company_name\\\">Company Name</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                name=\\\"company_name\\\"\\n                #company_name=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid':company_name.errors && company_name.touched}\\\"\\n                [(ngModel)]=\\\"main.company_name\\\"\\n                minlength=\\\"5\\\"\\n                required\\n            >\\n\\n            <div [hidden]=\\\"!company_name.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n              You must provide a value!\\n            </div>\\n            <div [hidden]=\\\"!company_name.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                Value must be 5 characters minimum please!\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"main_address\\\">Main Address</label>\\n              <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"main_address\\\"\\n                  #main_address=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid':main_address.errors && main_address.touched}\\\"\\n                  [(ngModel)]=\\\"main.main_address\\\"\\n                  minlength=\\\"10\\\"\\n                  required\\n              >\\n\\n              <div [hidden]=\\\"!main_address.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                You must provide a value!\\n              </div>\\n              <div [hidden]=\\\"!main_address.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 10 characters minimum please!\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"main_address_2\\\">Main Address 2</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control form-control-sm\\\"\\n                    name=\\\"main_address_2\\\"\\n                    #main_address_2=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid':main_address_2.errors && main_address_2.touched}\\\"\\n                    [(ngModel)]=\\\"main.main_address_2\\\"\\n                    minlength=\\\"10\\\"\\n                    required\\n                >\\n\\n                <div [hidden]=\\\"!main_address_2.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  You must provide a value!\\n                </div>\\n                <div [hidden]=\\\"!main_address_2.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Value must be 10 characters minimum please!\\n                </div>\\n              </div>\\n\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-3\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"main_city\\\">Main City</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control form-control-sm\\\"\\n                        name=\\\"main_city\\\"\\n                        #main_city=\\\"ngModel\\\"\\n                        [ngClass]=\\\"{'is-invalid':main_city.errors && main_city.touched}\\\"\\n                        [(ngModel)]=\\\"main.main_city\\\"\\n                        minlength=\\\"5\\\"\\n                        required\\n                    >\\n\\n                    <div [hidden]=\\\"!main_city.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                      You must provide a value!\\n                    </div>\\n                    <div [hidden]=\\\"!main_city.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                        Value must be 5 characters minimum please!\\n                    </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"main_state\\\">Main State</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"main_state\\\"\\n                          #main_state=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':main_state.errors && main_state.touched}\\\"\\n                          [(ngModel)]=\\\"main.main_state\\\"\\n                          minlength=\\\"2\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!main_state.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!main_state.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 2 characters minimum please!\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"main_zip\\\">Main Zip Code</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"main_zip\\\"\\n                            #main_zip=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':main_zip.errors && main_zip.touched}\\\"\\n                            [(ngModel)]=\\\"main.main_zip\\\"\\n                            minlength=\\\"5\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!main_zip.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!main_zip.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 5 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"main_country\\\">Main Country</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"main_country\\\"\\n                              #main_country=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':main_country.errors && main_country.touched}\\\"\\n                              [(ngModel)]=\\\"main.main_country\\\"\\n                              minlength=\\\"2\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!main_country.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!main_country.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                              Value must be 2 characters minimum please!\\n                          </div>\\n                      </div>\\n                    </div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"main_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Main Phone</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"main_phone\\\"\\n                          #main_phone=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':main_phone.errors && main_phone.touched}\\\"\\n                          [(ngModel)]=\\\"main.main_phone\\\"\\n                          minlength=\\\"10\\\"\\n                          pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!main_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!main_phone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 10 characters minimum please!\\n                      </div>\\n                      <div [hidden]=\\\"!main_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be a valid phone! (123)123-4567 or 123-123-4567 or 1231234567\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"main_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Main Email</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"main_email\\\"\\n                            #main_email=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':main_email.errors && main_email.touched}\\\"\\n                            [(ngModel)]=\\\"main.main_email\\\"\\n                            pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!main_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!main_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be a valid email address!\\n                        </div>\\n                    </div>\\n                  </div>\\n              </div>\\n              <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">directions_boat</i>Campus Shipping Details</h6>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"shipping_address\\\">Shipping Address</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control form-control-sm\\\"\\n                        name=\\\"shipping_address\\\"\\n                        #shipping_address=\\\"ngModel\\\"\\n                        [ngClass]=\\\"{'is-invalid':shipping_address.errors && shipping_address.touched}\\\"\\n                        [(ngModel)]=\\\"main.shipping_address\\\"\\n                        minlength=\\\"10\\\"\\n                        required\\n                    >\\n\\n                    <div [hidden]=\\\"!shipping_address.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                      You must provide a value!\\n                    </div>\\n                    <div [hidden]=\\\"!shipping_address.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                        Value must be 10 characters minimum please!\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"shipping_address_2\\\">Shipping Address 2</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"shipping_address_2\\\"\\n                          #shipping_address_2=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':shipping_address_2.errors && shipping_address_2.touched}\\\"\\n                          [(ngModel)]=\\\"main.shipping_address_2\\\"\\n                          minlength=\\\"10\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!shipping_address_2.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!shipping_address_2.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 10 characters minimum please!\\n                      </div>\\n                    </div>\\n\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"shipping_city\\\">Shipping City</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"shipping_city\\\"\\n                              #shipping_city=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':shipping_city.errors && shipping_city.touched}\\\"\\n                              [(ngModel)]=\\\"main.shipping_city\\\"\\n                              minlength=\\\"5\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!shipping_city.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!shipping_city.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                              Value must be 5 characters minimum please!\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"shipping_state\\\">Shipping State</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"shipping_state\\\"\\n                                #shipping_state=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':shipping_state.errors && shipping_state.touched}\\\"\\n                                [(ngModel)]=\\\"main.shipping_state\\\"\\n                                minlength=\\\"2\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!shipping_state.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!shipping_state.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                Value must be 2 characters minimum please!\\n                            </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"shipping_zip\\\">Shipping Zip Code</label>\\n                              <input\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-sm\\\"\\n                                  name=\\\"shipping_zip\\\"\\n                                  #shipping_zip=\\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid':shipping_zip.errors && shipping_zip.touched}\\\"\\n                                  [(ngModel)]=\\\"main.shipping_zip\\\"\\n                                  minlength=\\\"5\\\"\\n                                  required\\n                              >\\n\\n                              <div [hidden]=\\\"!shipping_zip.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                You must provide a value!\\n                              </div>\\n                              <div [hidden]=\\\"!shipping_zip.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                  Value must be 5 characters minimum please!\\n                              </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"shipping_country\\\">Shipping Country</label>\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    class=\\\"form-control form-control-sm\\\"\\n                                    name=\\\"shipping_country\\\"\\n                                    #shipping_country=\\\"ngModel\\\"\\n                                    [ngClass]=\\\"{'is-invalid':shipping_country.errors && shipping_country.touched}\\\"\\n                                    [(ngModel)]=\\\"main.shipping_country\\\"\\n                                    minlength=\\\"2\\\"\\n                                    required\\n                                >\\n\\n                                <div [hidden]=\\\"!shipping_country.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                  You must provide a value!\\n                                </div>\\n                                <div [hidden]=\\\"!shipping_country.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                    Value must be 2 characters minimum please!\\n                                </div>\\n                            </div>\\n                          </div>\\n                  </div>\\n\\n                  <div class=\\\"form-row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"shipping_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Shipping Phone</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"shipping_phone\\\"\\n                                #shipping_phone=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':shipping_phone.errors && shipping_phone.touched}\\\"\\n                                [(ngModel)]=\\\"main.shipping_phone\\\"\\n                                minlength=\\\"10\\\"\\n                                pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!shipping_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!shipping_phone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                Value must be 10 characters minimum please!\\n                            </div>\\n                            <div [hidden]=\\\"!shipping_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                Value must be a valid phone! (123)123-4567 or 123-123-4567 or 1231234567\\n                            </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"shipping_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Shipping Email</label>\\n                              <input\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-sm\\\"\\n                                  name=\\\"shipping_email\\\"\\n                                  #shipping_email=\\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid':shipping_email.errors && shipping_email.touched}\\\"\\n                                  [(ngModel)]=\\\"main.shipping_email\\\"\\n                                  pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                                  required\\n                              >\\n\\n                              <div [hidden]=\\\"!shipping_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                You must provide a value!\\n                              </div>\\n                              <div [hidden]=\\\"!shipping_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                  Value must be a valid email address!\\n                              </div>\\n                          </div>\\n                        </div>\\n                    </div>\\n\\n              <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">person</i>Campus Contact Details</h6>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"main_contact\\\"><i class=\\\"icon ion-md-person mr-1\\\"></i>Main Contact Full Name</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"main_contact\\\"\\n                          #main_contact=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':main_contact.errors && main_contact.touched}\\\"\\n                          [(ngModel)]=\\\"main.main_contact\\\"\\n                          minlength=\\\"5\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!main_contact.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!main_contact.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 5 characters minimum please!\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"main_contact_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Main Contact Phone</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"main_contact_phone\\\"\\n                            #main_contact_phone=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':main_contact_phone.errors && main_contact_phone.touched}\\\"\\n                            [(ngModel)]=\\\"main.main_contact_phone\\\"\\n                            pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!main_contact_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!main_contact_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                            Please use a valid phone number... (321) 234-4567 | 321-234-4567 | 3212344567\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"main_contact_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Main Contact Email</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"main_contact_email\\\"\\n                              #main_contact_email=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':main_contact_email.errors && main_contact_email.touched}\\\"\\n                              [(ngModel)]=\\\"main.main_contact_email\\\"\\n                              pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!main_contact_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!main_contact_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                              Please provide a valid email!\\n                          </div>\\n                      </div>\\n                    </div>\\n              </div>\\n\\n              <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"main_hr_contact\\\"><i class=\\\"icon ion-md-person mr-1\\\"></i>HR Contact Full Name</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"main_hr_contact\\\"\\n                            #main_hr_contact=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':main_hr_contact.errors && main_hr_contact.touched}\\\"\\n                            [(ngModel)]=\\\"main.main_hr_contact\\\"\\n                            minlength=\\\"5\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!main_hr_contact.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!main_hr_contact.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 5 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"main_hr_contact_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Main HR Contact Phone</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"main_hr_contact_phone\\\"\\n                              #main_hr_contact_phone=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':main_hr_contact_phone.errors && main_hr_contact_phone.touched}\\\"\\n                              [(ngModel)]=\\\"main.main_hr_contact_phone\\\"\\n                              pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!main_hr_contact_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!main_hr_contact_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                              Please use a valid phone number... (321) 234-4567 | 321-234-4567 | 3212344567\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"main_hr_contact_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Main HR Contact Email</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"main_hr_contact_email\\\"\\n                                #main_hr_contact_email=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':main_hr_contact_email.errors && main_hr_contact_email.touched}\\\"\\n                                [(ngModel)]=\\\"main.main_hr_contact_email\\\"\\n                                pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!main_hr_contact_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!main_hr_contact_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                Please provide a valid email!\\n                            </div>\\n                        </div>\\n                      </div>\\n                </div>\\n\\n          <input type=\\\"submit\\\" value=\\\"Submit Changes\\\" class=\\\"btn btn-info btn-block mt-4\\\">\\n        </form>\\n    </div>\\n    <div class=\\\"uk-card-footer\\\">\\n        <div class=\\\"uk-card-header bg-primary-dark uk-margin-small-bottom uk-padding-small\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                  <div class=\\\"row d-flex align-content-center\\\">\\n                    <div class=\\\"col-md-10\\\">\\n                        <h5 class=\\\"uk-margin-remove-bottom uk-margin-remove-left uk-text-bold text-white\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>Site Location List</h5>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <a routerLink=\\\"/company/edit/{{main.id}}\\\" class=\\\"uk-button uk-button-text text-white uk-margin-medium-right\\\"><i class=\\\"icon ion-md-add-circle-outline ml-1 mr-1\\\"></i>site</a>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        <ul class=\\\"uk-list uk-list-divider\\\">\\n            <li *ngFor=\\\"let site of sites\\\" class=\\\"uk-margin-small-left\\\">\\n              <div class=\\\"row d-flex align-content-center\\\">\\n                <div class=\\\"col-md-10 ext-uppercase justify-content-end\\\">\\n                    <a routerLink=\\\"/company/site/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>{{site.site_name}}</a>\\n\\n                </div>\\n                <div class=\\\"col-md-2 justify-content-end\\\">\\n                    <a routerLink=\\\"/company/site/edit/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-medium-right\\\"><i class=\\\"icon ion-md-create mr-1\\\"></i>edit</a>\\n                </div>\\n              </div>\\n\\n            </li>\\n        </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { SiteService } from '../../../services/site.service';\nimport { Main } from '../../../models/main';\nimport { Site } from '../../../models/site';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  id: string;\n  main: Main = {\n    company_name: '',\n    main_address: '',\n    main_address_2: '',\n    main_city: '',\n    main_state: '',\n    main_zip: '',\n    main_phone: '',\n    main_email: '',\n    main_country: '',\n    main_contact_email: '',\n    main_contact: '',\n    main_contact_phone: '',\n    main_hr_contact: '',\n    main_hr_contact_email: '',\n    main_hr_contact_phone: '',\n    shipping_address: '',\n    shipping_address_2: '',\n    shipping_city: '',\n    shipping_state: '',\n    shipping_zip: '',\n    shipping_country: '',\n    shipping_phone: '',\n    shipping_email: '',\n    shipping_contact: ''\n  };\n  sites: Site[];\n\n  constructor(\n    private ss: SiteService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n    this.ss.getMain(this.id).subscribe(mains => this.main = mains);\n    this.ss.getSites().subscribe(sites => {\n      this.sites = sites;\n    });\n  }\n\n  onSubmit({value, valid}: {value: Main, valid: boolean}) {\n    if (!valid) {\n      console.log('Not valid');\n    } else {\n      value.id = this.id;\n      this.ss.updateMain(value);\n      this.router.navigate(['/company']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvbWFpbi9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  settings works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".header-icon {\\n  font-size: 24px;\\n}\\n\\n.footer-bg {\\n  background-color: rgb(251, 251, 251);\\n}\\n\\n.badge-waiting-parts {\\n  background-color: coral;\\n  color: white;\\n}\\n\\n.badge-waiting-schedule {\\n  background-color: rgb(194, 98, 63);\\n  color: white;\\n}\\n\\n.badge-paused {\\n  background-color: rgb(245, 223, 22);\\n  color: darkslategray;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n\\n.dd-menu {\\n  min-width: 250px;\\n}\\n\\n.dd-button {\\n  min-width: 200px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcGFueS9zaXRlL2RldGFpbHMvc2l0ZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtDQUFrQztFQUNsQyxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQ0FBbUM7RUFDbkMsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvc2l0ZS9kZXRhaWxzL3NpdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1pY29uIHtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuXG4uZm9vdGVyLWJnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MSwgMjUxLCAyNTEpO1xufVxuXG4uYmFkZ2Utd2FpdGluZy1wYXJ0cyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvcmFsO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5iYWRnZS13YWl0aW5nLXNjaGVkdWxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5NCwgOTgsIDYzKTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYmFkZ2UtcGF1c2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NSwgMjIzLCAyMik7XG4gIGNvbG9yOiBkYXJrc2xhdGVncmF5O1xufVxuXG4ucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmRkLW1lbnUge1xuICBtaW4td2lkdGg6IDI1MHB4O1xufVxuXG4uZGQtYnV0dG9uIHtcbiAgbWluLXdpZHRoOiAyMDBweDtcbn1cblxuIl19 */\"","module.exports = \"<div class=\\\"container uk-margin-medium-bottom\\\">\\n    <div class=\\\"card uk-margin-medium-bottom\\\">\\n        <div class=\\\"uk-card-header bg-info\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons pr-1\\\">place</i>Site Location - {{site.site_name}}</h5>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"uk-card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">my_location</i>Campus Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_name}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_city}}, {{site.site_state}}, {{site.site_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Phone: {{site.site_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Email: {{site.site_email}}</li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">directions_boat</i>Ship To Location</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_name}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_address}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_city}}, {{site.site_ship_to_state}}, {{site.site_ship_to_zip}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_ship_to_country}}</li>\\n                        <br>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Phone: {{site.site_ship_to_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">Shipping Email: {{site.site_ship_to_email}}</li>\\n\\n                    </ul>\\n                </div>\\n                <div class=\\\"col-md-4 mb-2 mt-2\\\">\\n                    <ul class=\\\"uk-list\\\">\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Main Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_contact_email}}</li>\\n\\n                        <li><h6 class=\\\"uk-text-bold\\\"><i class=\\\"material-icons uk-text-primary uk-text-small\\\">person_pin_circle</i>Maintenance Contact</h6></li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_contact}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_phone}}</li>\\n                        <li class=\\\"uk-text-small uk-margin-medium-left\\\">{{site.site_maintenance_email}}</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"card-footer d-flex justify-content-around footer-bg\\\">\\n            <a routerLink=\\\"/company/site/edit/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-create ml-1 mr-1\\\"></i>edit</a>\\n            <a routerLink=\\\"/company/site/job/list/{{site.id}}\\\"  class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>jobs</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pulse ml-1 mr-1\\\"></i>stats</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-switch ml-1 mr-1\\\"></i>settings</a>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <ul uk-accordion>\\n                <li>\\n                    <a class=\\\"uk-accordion-title\\\"><i class=\\\"material-icons pr-1 text-primary\\\">assignment</i>Jobs List</a><hr>\\n                    <div class=\\\"uk-accordion-content\\\">\\n                        <div class=\\\"d-flex justify-content-center\\\">\\n                            <div class=\\\"btn-group\\\">\\n                                <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                    <i class=\\\"icon ion-md-pin text-white mr-2\\\"></i>Site Job Management\\n                                </button>\\n                                <div class=\\\"dropdown-menu dd-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\n                                  <h6 class=\\\"dropdown-header\\\">Job Actions</h6>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-add-circle text-primary mr-2\\\"></i>New Job</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-pulse text-danger mr-2\\\"></i>View Site Job Stats</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-settings text-secondary mr-2\\\"></i>Site Job Settings</a>\\n                                  <h6 class=\\\"dropdown-header\\\">Document Actions</h6>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-print text-success mr-2\\\"></i>View/Print Job Reports</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-cloud-upload text-danger mr-2\\\"></i>Upload Files</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-eye text-danger mr-2\\\"></i>View Documents</a>\\n                                </div>\\n                              </div>\\n                          </div>\\n                        <hr class=\\\"uk-margin-small-bottom\\\">\\n                        <ul uk-accordion>\\n                            <li *ngFor=\\\"let job of jobs\\\" class=\\\"uk-open\\\">\\n                                <a class=\\\"uk-accordion-title uk-text-small uk-text-uppercase pointer\\\">\\n                                  <section *ngIf=\\\"job.job_status === 'Started'\\\">\\n                                    <span class=\\\"badge badge-success mt-2 mb-2 mr-3 shadow-sm\\\">\\n                                        <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                        WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                    </span>\\n                                    <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                  <section *ngIf=\\\"job.job_status === 'Paused'\\\">\\n                                      <span class=\\\"badge badge-paused mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                          <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                          WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                      </span>\\n                                      <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                  <section *ngIf=\\\"job.job_status === 'Wait Parts'\\\">\\n                                      <span class=\\\"badge badge-waiting-parts mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                          <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                          WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                      </span>\\n                                      <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                  <section *ngIf=\\\"job.job_status === 'Wait Sched'\\\">\\n                                      <span class=\\\"badge badge-waiting-schedule mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                          <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                          WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                      </span>\\n                                      <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                  <section *ngIf=\\\"job.job_status === 'Closed'\\\">\\n                                      <span class=\\\"badge badge-secondary mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                          <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                          WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                      </span>\\n                                      <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                  <section *ngIf=\\\"job.job_status === 'Completed'\\\">\\n                                      <span class=\\\"badge badge-danger mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                          <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                          WO#&nbsp;{{job.job_number}} - {{job.job_status}} - Asset: {{job.job_asset}}\\n                                      </span>\\n                                      <!-- {{job.job_title}} - Asset: {{job.job_asset}} -->\\n                                  </section>\\n                                </a>\\n                                <div class=\\\"uk-accordion-content\\\">\\n                                    <div class=\\\"uk-section pt-3 pb-4\\\">\\n                                        <div class=\\\"uk-container\\\">\\n\\n                                            <div class=\\\"uk-grid-match uk-child-width-1-3@m\\\" uk-grid>\\n                                                <div>\\n                                                    <ul class=\\\"uk-list\\\">\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Title: </strong>{{job.job_title}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset: </strong>{{job.job_asset}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Status: </strong>{{job.job_status}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Type: </strong>{{job.job_type}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asigned To: </strong>{{job.job_worker}}</li>\\n                                                        <li class=\\\"uk-text-small\\\" *ngIf=\\\"job.scheduled_date\\\"><strong>Scheduled Start Date: </strong>{{ job.scheduled_date.seconds * 1000 | date: 'fullDate' }}</li>\\n                                                        <li class=\\\"uk-text-small\\\" *ngIf=\\\"!job.scheduled_date\\\"><strong>Scheduled Start Date: </strong>No date set</li>\\n                                                        <li *ngIf=\\\"job.worker_status === 'On The Job'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-timer text-success ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                                        <li *ngIf=\\\"job.worker_status === 'Lunch'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                                        <li *ngIf=\\\"job.worker_status === 'Punched Out'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-alarm text-danger ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                                        <li *ngIf=\\\"job.worker_status == 'Break'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                                        <li *ngIf=\\\"job.worker_status == 'Paused'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-primary ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                                        <li *ngIf=\\\"job.worker_status === ''\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-help text-info ml-2 mr-2\\\"></i>Unknown</li>\\n                                                    </ul>\\n\\n                                                </div>\\n                                                <div>\\n                                                    <p><strong>Description:  </strong>{{job.job_description}}</p>\\n                                                    <p><strong>Assignment Notes:  </strong>{{job.job_notes}}</p>\\n                                                </div>\\n                                                <div>\\n                                                    <p><strong>Completion Notes:  </strong>{{job.job_completion_notes}}</p>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"mt-3\\\">\\n                                              <div class=\\\"btn-group mb-sm-2 mb-md-0 uk-margin-small-bottom\\\">\\n                                                  <button class=\\\"btn btn-secondary dropdown-toggle dd-button\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                                      <i class=\\\"icon ion-md-walk text-white mr-2\\\"></i>Job Actions\\n                                                  </button>\\n                                                  <div class=\\\"dropdown-menu dd-menu\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\n                                                    <h6 class=\\\"dropdown-header\\\">Job Actions</h6>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-eye text-primary mr-2\\\"></i>Job Details</a>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-trash text-danger mr-2\\\"></i>Delete Job</a>\\n                                                    <a routerLink=\\\"/company/site/job/edit/{{job.id}}\\\"class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-create text-secondary mr-2\\\"></i>Edit Job</a>\\n                                                    <a routerLink=\\\"/company/site/job/edit/{{job.id}}\\\"class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-eye text-info mr-2\\\"></i>View Asset Details</a>\\n                                                  </div>\\n                                                </div>\\n                                                <div class=\\\"btn-group ml-md-3 ml-sm-0\\\">\\n                                                  <button class=\\\"btn btn-info dropdown-toggle dd-button\\\" type=\\\"button\\\" id=\\\"dropdownMenu3\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                                      <i class=\\\"icon ion-md-walk text-white mr-2\\\"></i>Worker Actions\\n                                                  </button>\\n                                                  <div class=\\\"dropdown-menu dd-menu\\\" aria-labelledby=\\\"dropdownMenu3\\\">\\n                                                    <h6 class=\\\"dropdown-header\\\">Worker Actions</h6>\\n                                                    <a class=\\\"dropdown-item\\\" *ngIf=\\\"job.worker_status != 'On The Job'\\\" (click)=\\\"clockOn(job)\\\"><i class=\\\"icon ion-md-clock text-success mr-2\\\"></i>Clock On</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"clockOff(job)\\\" *ngIf=\\\"job.worker_status != 'Punched Out'\\\"><i class=\\\"icon ion-md-clock text-danger mr-2\\\"></i>Clock Off</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"lunchBreak(job)\\\" *ngIf=\\\"job.worker_status != 'Lunch'\\\"><i class=\\\"icon ion-md-nutrition text-danger mr-2\\\"></i>Lunch Break</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"pauseJob(job)\\\" *ngIf=\\\"job.worker_status != 'Paused'\\\"><i class=\\\"icon ion-md-pause text-primary mr-2\\\"></i>Pause Job</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"pauseWaitingParts(job)\\\" *ngIf=\\\"job.job_status != 'Wait Parts'\\\"><i class=\\\"icon ion-md-rocket text-secondary mr-2\\\"></i>Clock Off ~ Waiting Parts</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"clockComplete(job)\\\" *ngIf=\\\"job.worker_status != 'Punched Out'\\\"><i class=\\\"icon ion-md-rocket text-secondary mr-2\\\"></i>Clock Off & Complete Job</a>\\n                                                  </div>\\n                                                </div>\\n                                            </div>\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <hr>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </li>\\n                <li>\\n                    <a class=\\\"uk-accordion-title\\\"><i class=\\\"material-icons mr-1 text-primary\\\">view_list</i>Asset List</a><hr>\\n                    <div class=\\\"uk-accordion-content\\\">\\n                        <div class=\\\"d-flex justify-content-center\\\">\\n                            <div class=\\\"btn-group\\\">\\n                                <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                    <i class=\\\"icon ion-md-pin text-white mr-2\\\"></i>Site Asset Management\\n                                </button>\\n                                <div class=\\\"dropdown-menu dd-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\n                                  <h6 class=\\\"dropdown-header\\\">Job Actions</h6>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-add-circle text-primary mr-2\\\"></i>New Job</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-pulse text-danger mr-2\\\"></i>View Site Job Stats</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-settings text-secondary mr-2\\\"></i>Site Job Settings</a>\\n                                  <h6 class=\\\"dropdown-header\\\">Document Actions</h6>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-print text-success mr-2\\\"></i>View/Print Job Reports</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-cloud-upload text-danger mr-2\\\"></i>Upload Files</a>\\n                                  <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-eye text-danger mr-2\\\"></i>View Documents</a>\\n                                </div>\\n                              </div>\\n                          </div>\\n                        <hr class=\\\"uk-margin-small-bottom\\\">\\n                        <ul uk-accordion>\\n                            <li *ngFor=\\\"let asset of assets\\\" class=\\\"uk-open\\\">\\n                                <a class=\\\"uk-accordion-title uk-text-small uk-text-uppercase pointer\\\">\\n                                    <span class=\\\"badge badge-info mr-3 mt-2 mb-2 shadow-sm\\\">\\n                                        <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                                        Asset#&nbsp;{{asset.asset_number}} - {{asset.asset_make}} - {{asset.asset_model}}\\n                                    </span>\\n                                </a>\\n                                <div class=\\\"uk-accordion-content\\\">\\n                                    <div class=\\\"uk-section pt-3 pb-4\\\">\\n                                        <div class=\\\"uk-container\\\">\\n\\n                                            <div class=\\\"uk-grid-match uk-child-width-1-3@m\\\" uk-grid>\\n                                                <div>\\n                                                    <ul class=\\\"uk-list\\\">\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Number: </strong>{{asset.asset_number}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Make: </strong>{{asset.asset_make}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Model: </strong>{{asset.asset_model}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Serial Number: </strong>{{asset.asset_serial_number}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Type: </strong>{{asset.asset_type}}</li>\\n                                                        <li class=\\\"uk-text-small\\\"><strong>Asset Location: </strong>{{asset.asset_location}}</li>\\n                                                        <li class=\\\"uk-text-small\\\" *ngIf=\\\"asset.asset_warranty_end_date\\\"><strong>Warranty End Date: </strong>{{ asset.asset_warranty_end_date.seconds * 1000 | date: 'fullDate' }}</li>\\n                                                        <li class=\\\"uk-text-small\\\" *ngIf=\\\"!asset.asset_warranty_end_date\\\"><strong>Warranty End Date: </strong>No date set</li>\\n                                                        <li *ngIf=\\\"asset.asset_has_extended_warranty\\\" class=\\\"uk-text-small\\\"><strong>Has Extended Warranty?: </strong><i class=\\\"icon ion-md-timer text-success ml-2 mr-2\\\"></i>{{asset.asset_has_extended_warranty}}</li>\\n                                                        <li *ngIf=\\\"asset.asset_sku\\\" class=\\\"uk-text-small\\\"><strong>SKU: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{asset.asset_sku}}</li>\\n                                                    </ul>\\n\\n                                                </div>\\n                                                <div>\\n                                                    <p><strong>Asset Description:  </strong>{{asset.asset_description}}</p>\\n                                                </div>\\n                                                <div>\\n                                                    <p><strong>Asset Notes:  </strong>{{asset.asset_notes}}</p>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"mt-3\\\">\\n                                              <div class=\\\"btn-group mb-sm-2 mb-md-0 uk-margin-small-bottom\\\">\\n                                                  <button class=\\\"btn btn-secondary dropdown-toggle dd-button\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                                      <i class=\\\"icon ion-md-walk text-white mr-2\\\"></i>Asset Actions\\n                                                  </button>\\n                                                  <div class=\\\"dropdown-menu dd-menu\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\n                                                    <h6 class=\\\"dropdown-header\\\">Asset Actions</h6>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-eye text-primary mr-2\\\"></i>Asset Details</a>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-trash text-danger mr-2\\\"></i>Delete Asset</a>\\n                                                    <a routerLink=\\\"/company/site/job/edit/{{job.id}}\\\"class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-create text-secondary mr-2\\\"></i>Edit Asset</a>\\n                                                    <h6 class=\\\"dropdown-header\\\">Job Actions</h6>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-construct text-primary mr-2\\\"></i>New Asset Job</a>\\n                                                    <a class=\\\"dropdown-item\\\"><i class=\\\"icon ion-md-build text-danger mr-2\\\"></i>New Asset PM</a>\\n                                                  </div>\\n                                                </div>\\n                                                <div class=\\\"btn-group ml-md-3 ml-sm-0\\\">\\n                                                  <button class=\\\"btn btn-info dropdown-toggle dd-button\\\" type=\\\"button\\\" id=\\\"dropdownMenu3\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" data-offset=\\\"5,10\\\">\\n                                                      <i class=\\\"icon ion-md-walk text-white mr-2\\\"></i>Worker Actions\\n                                                  </button>\\n                                                  <div class=\\\"dropdown-menu dd-menu\\\" aria-labelledby=\\\"dropdownMenu3\\\">\\n                                                    <h6 class=\\\"dropdown-header\\\">Worker Actions</h6>\\n                                                    <a class=\\\"dropdown-item\\\" *ngIf=\\\"job.worker_status != 'On The Job'\\\" (click)=\\\"clockOn(job)\\\"><i class=\\\"icon ion-md-clock text-success mr-2\\\"></i>Clock On</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"clockOff(job)\\\" *ngIf=\\\"job.worker_status != 'Punched Out'\\\"><i class=\\\"icon ion-md-clock text-danger mr-2\\\"></i>Clock Off</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"lunchBreak(job)\\\" *ngIf=\\\"job.worker_status != 'Lunch'\\\"><i class=\\\"icon ion-md-nutrition text-danger mr-2\\\"></i>Lunch Break</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"pauseJob(job)\\\" *ngIf=\\\"job.worker_status != 'Paused'\\\"><i class=\\\"icon ion-md-pause text-primary mr-2\\\"></i>Pause Job</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"pauseWaitingParts(job)\\\" *ngIf=\\\"job.job_status != 'Wait Parts'\\\"><i class=\\\"icon ion-md-rocket text-secondary mr-2\\\"></i>Clock Off ~ Waiting Parts</a>\\n                                                    <a class=\\\"dropdown-item\\\" (click)=\\\"clockComplete(job)\\\" *ngIf=\\\"job.worker_status != 'Punched Out'\\\"><i class=\\\"icon ion-md-rocket text-secondary mr-2\\\"></i>Clock Off & Complete Job</a>\\n                                                  </div>\\n                                                </div>\\n                                            </div>\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <hr>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </li>\\n                <li>\\n                    <a class=\\\"uk-accordion-title\\\" href=\\\"#\\\">Item 3</a>\\n                    <div class=\\\"uk-accordion-content\\\">\\n                        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat proident.</p>\\n                    </div>\\n                </li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { firestore } from 'firebase';\n\nimport { SiteService } from '../../../services/site.service';\nimport { JobService } from '../../../services/job.service';\n\nimport { Site } from '../../../models/site';\nimport { Job } from '../../../models/job';\nimport { Asset } from '../../../models/asset';\n\n@Component({\n  selector: 'app-site-details',\n  templateUrl: './site-details.component.html',\n  styleUrls: ['./site-details.component.css']\n})\nexport class SiteDetailsComponent implements OnInit {\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n  jobId: string;\n  job: Job = {\n    id: '',\n    job_title:  '',\n    job_description: '',\n    job_asset: '',\n    job_notes: '',\n    job_status: '',\n    job_type: '',\n    job_worker: '',\n    site_id: '',\n    worker_status: ''\n  };\n  jobs: Job[];\n  assets: Asset[];\n\n  constructor(private ss: SiteService, private js: JobService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n    this.ss.getSite(this.id).subscribe(site => {\n      this.site = site;\n    });\n    this.ss.getJobs(this.id).subscribe(jobs => {\n      this.jobs = jobs;\n      console.log(this.jobs);\n    });\n    this.ss.getAssets(this.id).subscribe(assets => {\n      this.assets = assets;\n      console.log(this.assets);\n    });\n  }\n\n  clockOn(job) {\n    this.job = job;\n    this.job.worker_status = 'On The Job';\n    this.job.job_status = 'Started';\n    this.js.updateJob(this.job);\n  }\n\n  clockOff(job) {\n    this.job = job;\n    this.job.worker_status = 'Punched Out';\n    this.js.updateJob(this.job);\n  }\n\n  lunchBreak(job) {\n    this.job = job;\n    this.job.worker_status = 'Lunch';\n    this.job.job_status = 'Paused';\n    this.js.updateJob(this.job);\n  }\n\n  clockComplete(job) {\n    this.job = job;\n    this.job.worker_status = 'Punched Out';\n    this.job.job_status = 'Completed';\n    this.js.updateJob(this.job);\n  }\n\n  pauseJob(job) {\n    this.job = job;\n    this.job.worker_status = 'Paused';\n    this.job.job_status = 'Paused';\n    this.js.updateJob(this.job);\n  }\n\n  pauseWaitingParts(job) {\n    this.job = job;\n    this.job.worker_status = 'Punched Out';\n    this.job.job_status = 'Wait Parts';\n    this.js.updateJob(this.job);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvc2l0ZS9lZGl0L3NpdGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container uk-margin-small-bottom\\\">\\n    <div class=\\\"uk-card uk-card-default\\\">\\n      <div class=\\\"uk-card-header bg-info\\\">\\n          <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n              <div class=\\\"uk-width-expand\\\">\\n                  <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons uk-text-white mr-1\\\">my_location</i>{{site.site_name}} Campus Details - Edit</h5>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"uk-card-body\\\">\\n        <small class=\\\"uk-text-muted\\\">Please make required changes and submit to to save them.</small>\\n        <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">my_location</i>Campus Location Details</h6>\\n          <form #siteForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(siteForm)\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"site_name\\\">Site Name</label>\\n              <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"site_name\\\"\\n                  #site_name=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid':site_name.errors && site_name.touched}\\\"\\n                  [(ngModel)]=\\\"site.site_name\\\"\\n                  minlength=\\\"5\\\"\\n                  required\\n              >\\n\\n              <div [hidden]=\\\"!site_name.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                You must provide a value!\\n              </div>\\n              <div [hidden]=\\\"!site_name.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 5 characters minimum please!\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"site_address\\\">Site Address</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control form-control-sm\\\"\\n                    name=\\\"site_address\\\"\\n                    #site_address=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid':site_address.errors && site_address.touched}\\\"\\n                    [(ngModel)]=\\\"site.site_address\\\"\\n                    minlength=\\\"10\\\"\\n                    required\\n                >\\n\\n                <div [hidden]=\\\"!site_address.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  You must provide a value!\\n                </div>\\n                <div [hidden]=\\\"!site_address.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Value must be 10 characters minimum please!\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"site_address_2\\\">Site Address 2</label>\\n                  <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      name=\\\"site_address_2\\\"\\n                      #site_address_2=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{'is-invalid':site_address_2.errors && site_address_2.touched}\\\"\\n                      [(ngModel)]=\\\"site.site_address_2\\\"\\n                      minlength=\\\"10\\\"\\n                      required\\n                  >\\n\\n                  <div [hidden]=\\\"!site_address_2.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                    You must provide a value!\\n                  </div>\\n                  <div [hidden]=\\\"!site_address_2.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                      Value must be 10 characters minimum please!\\n                  </div>\\n                </div>\\n\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"site_city\\\">Site City</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"site_city\\\"\\n                          #site_city=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':site_city.errors && site_city.touched}\\\"\\n                          [(ngModel)]=\\\"site.site_city\\\"\\n                          minlength=\\\"5\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!site_city.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!site_city.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 5 characters minimum please!\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"site_state\\\">Site State</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"site_state\\\"\\n                            #site_state=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':site_state.errors && site_state.touched}\\\"\\n                            [(ngModel)]=\\\"site.site_state\\\"\\n                            minlength=\\\"2\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!site_state.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!site_state.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 2 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"site_zip\\\">Site Zip Code</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"site_zip\\\"\\n                              #site_zip=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':site_zip.errors && site_zip.touched}\\\"\\n                              [(ngModel)]=\\\"site.site_zip\\\"\\n                              minlength=\\\"5\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!site_zip.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!site_zip.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                              Value must be 5 characters minimum please!\\n                          </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"site_country\\\">Site Country</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"site_country\\\"\\n                                #site_country=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':site_country.errors && site_country.touched}\\\"\\n                                [(ngModel)]=\\\"site.site_country\\\"\\n                                minlength=\\\"2\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!site_country.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!site_country.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                Value must be 2 characters minimum please!\\n                            </div>\\n                        </div>\\n                      </div>\\n              </div>\\n\\n              <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"site_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Site Phone</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"site_phone\\\"\\n                            #site_phone=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':site_phone.errors && site_phone.touched}\\\"\\n                            [(ngModel)]=\\\"site.site_phone\\\"\\n                            minlength=\\\"10\\\"\\n                            pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!site_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!site_phone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 10 characters minimum please!\\n                        </div>\\n                        <div [hidden]=\\\"!site_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be a valid phone! (123)123-4567 or 123-123-4567 or 1231234567\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"site_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Site Email</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"site_email\\\"\\n                              #site_email=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':site_email.errors && site_email.touched}\\\"\\n                              [(ngModel)]=\\\"site.site_email\\\"\\n                              pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!site_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!site_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                              Value must be a valid email address!\\n                          </div>\\n                      </div>\\n                    </div>\\n                </div>\\n                <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">directions_boat</i>Campus Shipping Details</h6>\\n\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"site_ship_to_address\\\">Shipping Address</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"site_ship_to_address\\\"\\n                          #site_ship_to_address=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':site_ship_to_address.errors && site_ship_to_address.touched}\\\"\\n                          [(ngModel)]=\\\"site.site_ship_to_address\\\"\\n                          minlength=\\\"10\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!site_ship_to_address.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!site_ship_to_address.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 10 characters minimum please!\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"site_ship_to_address_2\\\">Shipping Address 2</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"site_ship_to_address_2\\\"\\n                            #site_ship_to_address_2=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':site_ship_to_address_2.errors && site_ship_to_address_2.touched}\\\"\\n                            [(ngModel)]=\\\"site.site_ship_to_address_2\\\"\\n                            minlength=\\\"10\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!site_ship_to_address_2.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!site_ship_to_address_2.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 10 characters minimum please!\\n                        </div>\\n                      </div>\\n\\n                    <div class=\\\"form-row\\\">\\n                      <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"site_ship_to_city\\\">Shipping City</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"site_ship_to_city\\\"\\n                                #site_ship_to_city=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':site_ship_to_city.errors && site_ship_to_city.touched}\\\"\\n                                [(ngModel)]=\\\"site.site_ship_to_city\\\"\\n                                minlength=\\\"5\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!site_ship_to_city.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!site_ship_to_city.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                Value must be 5 characters minimum please!\\n                            </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"site_ship_to_state\\\">Shipping State</label>\\n                              <input\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-sm\\\"\\n                                  name=\\\"site_ship_to_state\\\"\\n                                  #site_ship_to_state=\\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid':site_ship_to_state.errors && site_ship_to_state.touched}\\\"\\n                                  [(ngModel)]=\\\"site.site_ship_to_state\\\"\\n                                  minlength=\\\"2\\\"\\n                                  required\\n                              >\\n\\n                              <div [hidden]=\\\"!site_ship_to_state.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                You must provide a value!\\n                              </div>\\n                              <div [hidden]=\\\"!site_ship_to_state.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                  Value must be 2 characters minimum please!\\n                              </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"site_ship_to_zip\\\">Shipping Zip Code</label>\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    class=\\\"form-control form-control-sm\\\"\\n                                    name=\\\"site_ship_to_zip\\\"\\n                                    #site_ship_to_zip=\\\"ngModel\\\"\\n                                    [ngClass]=\\\"{'is-invalid':site_ship_to_zip.errors && site_ship_to_zip.touched}\\\"\\n                                    [(ngModel)]=\\\"site.site_ship_to_zip\\\"\\n                                    minlength=\\\"5\\\"\\n                                    required\\n                                >\\n\\n                                <div [hidden]=\\\"!site_ship_to_zip.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                  You must provide a value!\\n                                </div>\\n                                <div [hidden]=\\\"!site_ship_to_zip.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                    Value must be 5 characters minimum please!\\n                                </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col-md-3\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"site_ship_to_country\\\">Shipping Country</label>\\n                                  <input\\n                                      type=\\\"text\\\"\\n                                      class=\\\"form-control form-control-sm\\\"\\n                                      name=\\\"site_ship_to_country\\\"\\n                                      #site_ship_to_country=\\\"ngModel\\\"\\n                                      [ngClass]=\\\"{'is-invalid':site_ship_to_country.errors && site_ship_to_country.touched}\\\"\\n                                      [(ngModel)]=\\\"site.site_ship_to_country\\\"\\n                                      minlength=\\\"2\\\"\\n                                      required\\n                                  >\\n\\n                                  <div [hidden]=\\\"!site_ship_to_country.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                    You must provide a value!\\n                                  </div>\\n                                  <div [hidden]=\\\"!site_ship_to_country.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                      Value must be 2 characters minimum please!\\n                                  </div>\\n                              </div>\\n                            </div>\\n                    </div>\\n\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"site_ship_to_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Shipping Phone</label>\\n                              <input\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-sm\\\"\\n                                  name=\\\"site_ship_to_phone\\\"\\n                                  #site_ship_to_phone=\\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid':site_ship_to_phone.errors && site_ship_to_phone.touched}\\\"\\n                                  [(ngModel)]=\\\"site.site_ship_to_phone\\\"\\n                                  minlength=\\\"10\\\"\\n                                  pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                                  required\\n                              >\\n\\n                              <div [hidden]=\\\"!site_ship_to_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                You must provide a value!\\n                              </div>\\n                              <div [hidden]=\\\"!site_ship_to_phone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                  Value must be 10 characters minimum please!\\n                              </div>\\n                              <div [hidden]=\\\"!site_ship_to_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                  Value must be a valid phone! (123)123-4567 or 123-123-4567 or 1231234567\\n                              </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"site_ship_to_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Shipping Email</label>\\n                                <input\\n                                    type=\\\"text\\\"\\n                                    class=\\\"form-control form-control-sm\\\"\\n                                    name=\\\"site_ship_to_email\\\"\\n                                    #site_ship_to_email=\\\"ngModel\\\"\\n                                    [ngClass]=\\\"{'is-invalid':site_ship_to_email.errors && site_ship_to_email.touched}\\\"\\n                                    [(ngModel)]=\\\"site.site_ship_to_email\\\"\\n                                    pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                                    required\\n                                >\\n\\n                                <div [hidden]=\\\"!site_ship_to_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                  You must provide a value!\\n                                </div>\\n                                <div [hidden]=\\\"!site_ship_to_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                    Value must be a valid email address!\\n                                </div>\\n                            </div>\\n                          </div>\\n                      </div>\\n\\n                <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\">person</i>Campus Contact Details</h6>\\n              <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"site_contact\\\"><i class=\\\"icon ion-md-person mr-1\\\"></i>Main Contact</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"site_contact\\\"\\n                            #site_contact=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':site_contact.errors && site_contact.touched}\\\"\\n                            [(ngModel)]=\\\"site.site_contact\\\"\\n                            minlength=\\\"5\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!site_contact.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!site_contact.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 5 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"site_contact_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Main Contact Phone</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"site_contact_phone\\\"\\n                              #site_contact_phone=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':site_contact_phone.errors && site_contact_phone.touched}\\\"\\n                              [(ngModel)]=\\\"site.site_contact_phone\\\"\\n                              pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!site_contact_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!site_contact_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                              Please use a valid phone number... (321) 234-4567 | 321-234-4567 | 3212344567\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"site_contact_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Main Contact Email</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"site_contact_email\\\"\\n                                #site_contact_email=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':site_contact_email.errors && site_contact_email.touched}\\\"\\n                                [(ngModel)]=\\\"site.site_contact_email\\\"\\n                                pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!site_contact_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!site_contact_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                Please provide a valid email!\\n                            </div>\\n                        </div>\\n                      </div>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"site_maintenance_contact\\\"><i class=\\\"icon ion-md-person mr-1\\\"></i>Maintenance Contact</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"site_maintenance_contact\\\"\\n                              #site_maintenance_contact=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':site_maintenance_contact.errors && site_maintenance_contact.touched}\\\"\\n                              [(ngModel)]=\\\"site.site_maintenance_contact\\\"\\n                              minlength=\\\"5\\\"\\n                              required\\n                          >\\n\\n                          <div [hidden]=\\\"!site_maintenance_contact.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                            You must provide a value!\\n                          </div>\\n                          <div [hidden]=\\\"!site_maintenance_contact.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                              Value must be 5 characters minimum please!\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"site_maintenance_phone\\\"><i class=\\\"icon ion-md-call mr-1\\\"></i>Maintenance Contact Phone</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-sm\\\"\\n                                name=\\\"site_maintenance_phone\\\"\\n                                #site_maintenance_phone=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid':site_maintenance_phone.errors && site_maintenance_phone.touched}\\\"\\n                                [(ngModel)]=\\\"site.site_maintenance_phone\\\"\\n                                pattern=\\\"^\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4})$\\\"\\n                                required\\n                            >\\n\\n                            <div [hidden]=\\\"!site_maintenance_phone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                            </div>\\n                            <div [hidden]=\\\"!site_maintenance_phone.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                Please use a valid phone number... (321) 234-4567 | 321-234-4567 | 3212344567\\n                            </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-4\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"site_maintenance_email\\\"><i class=\\\"icon ion-md-mail mr-1\\\"></i>Main HR Contact Email</label>\\n                              <input\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-sm\\\"\\n                                  name=\\\"site_maintenance_email\\\"\\n                                  #site_maintenance_email=\\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid':site_maintenance_email.errors && site_maintenance_email.touched}\\\"\\n                                  [(ngModel)]=\\\"site.site_maintenance_email\\\"\\n                                  pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n                                  required\\n                              >\\n\\n                              <div [hidden]=\\\"!site_maintenance_email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                                You must provide a value!\\n                              </div>\\n                              <div [hidden]=\\\"!site_maintenance_email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                                  Please provide a valid email!\\n                              </div>\\n                          </div>\\n                        </div>\\n                  </div>\\n\\n            <input type=\\\"submit\\\" value=\\\"Submit Changes\\\" class=\\\"btn btn-info btn-block mt-4\\\">\\n          </form>\\n      </div>\\n      <div class=\\\"uk-card-footer\\\">\\n          <!-- <div class=\\\"uk-card-header bg-primary-dark uk-margin-small-bottom uk-padding-small\\\">\\n              <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                  <div class=\\\"uk-width-expand\\\">\\n                    <div class=\\\"row d-flex align-content-center\\\">\\n                      <div class=\\\"col-md-10\\\">\\n                          <h5 class=\\\"uk-margin-remove-bottom uk-margin-remove-left uk-text-bold text-white\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>Site Location List</h5>\\n                      </div>\\n                      <div class=\\\"col-md-2\\\">\\n                          <a routerLink=\\\"/company/edit/{{main.id}}\\\" class=\\\"uk-button uk-button-text text-white uk-margin-medium-right\\\"><i class=\\\"icon ion-md-add-circle-outline ml-1 mr-1\\\"></i>site</a>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n              </div>\\n          </div>\\n          <ul class=\\\"uk-list uk-list-divider\\\">\\n              <li *ngFor=\\\"let site of sites\\\" class=\\\"uk-margin-small-left\\\">\\n                <div class=\\\"row d-flex align-content-center\\\">\\n                  <div class=\\\"col-md-10 ext-uppercase justify-content-end\\\">\\n                      <a routerLink=\\\"/company/site/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>{{site.site_name}}</a>\\n\\n                  </div>\\n                  <div class=\\\"col-md-2 justify-content-end\\\">\\n                      <a routerLink=\\\"/company/site/edit/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-medium-right\\\"><i class=\\\"icon ion-md-create mr-1\\\"></i>edit</a>\\n                  </div>\\n                </div>\\n\\n              </li>\\n          </ul> -->\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { SiteService } from '../../../services/site.service';\n\nimport { Site } from '../../../models/site';\n\n@Component({\n  selector: 'app-site-edit',\n  templateUrl: './site-edit.component.html',\n  styleUrls: ['./site-edit.component.css']\n})\nexport class SiteEditComponent implements OnInit {\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_address_2: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_address_2: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n\n  constructor(private ss: SiteService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n    this.ss.getSite(this.id).subscribe(site => {\n      this.site = site;\n    });\n  }\n\n  onSubmit({value, valid}: {value: Site, valid: boolean}) {\n    if (!valid) {\n      console.log('Not valid');\n    } else {\n      value.id = this.id;\n      this.ss.updateSite(value);\n      this.router.navigate([`/company/site/${this.id}`]);\n    }\n  }\n\n}\n","module.exports = \".icon-min-w {\\n  min-width: 125px;\\n}\\n.outline-killer {\\n  outline: none !important;\\n  border: 0 !important;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcGFueS9zaXRlL2pvYnMvYWRkL2pvYi1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvc2l0ZS9qb2JzL2FkZC9qb2ItYWRkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaWNvbi1taW4tdyB7XG4gIG1pbi13aWR0aDogMTI1cHg7XG59XG4ub3V0bGluZS1raWxsZXIge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xufVxuXG4iXX0= */\"","module.exports = \"<div class=\\\"uk-container uk-margin-small-bottom\\\">\\n    <div class=\\\"uk-card uk-card-default\\\">\\n      <div class=\\\"card-header bg-info\\\">\\n          <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n              <div class=\\\"uk-width-expand\\\">\\n                  <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>{{site.site_name}} - Add Job</h5>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"uk-card-body pt-3\\\">\\n          <h3 class=\\\"mt-0 pt-0\\\">Job Details</h3>\\n          <hr>\\n          <form #jobForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(jobForm)\\\" class=\\\"was-validated\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"job_title\\\">Job Title</label>\\n              <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"job_title\\\"\\n                  #job_title=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid':job_title.errors && job_title.touched}\\\"\\n                  [(ngModel)]=\\\"job.job_title\\\"\\n                  minlength=\\\"5\\\"\\n                  maxlength=\\\"25\\\"\\n                  required\\n              >\\n              <input\\n                  type=\\\"hidden\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"site_id\\\"\\n                  #site_id=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"job.site_id\\\"\\n              >\\n\\n              <div [hidden]=\\\"!job_title.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                You must provide a title! (Max Characters = 25)\\n              </div>\\n              <div [hidden]=\\\"!job_title.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 5 characters minimum please!\\n              </div>\\n              <div [hidden]=\\\"!job_title.errors?.maxlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 25 characters maximum please!\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"job_description\\\">Job Description</label>\\n                <textarea\\n                    type=\\\"text\\\"\\n                    rows=\\\"3\\\"\\n                    class=\\\"form-control form-control-sm\\\"\\n                    name=\\\"job_description\\\"\\n                    #job_description=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid':job_description.errors && job_description.touched}\\\"\\n                    [(ngModel)]=\\\"job.job_description\\\"\\n                    minlength=\\\"10\\\"\\n                    required\\n                ></textarea>\\n\\n                <div [hidden]=\\\"!job_description.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  You must provide a description! (Please be descriptive)\\n                </div>\\n                <div [hidden]=\\\"!job_description.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Value must be 10 characters minimum please!\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"job_status\\\">Job Status</label>\\n                    <select\\n                      class=\\\"form-control form-control-sm\\\"\\n                      id=\\\"job_status\\\"\\n                      name=\\\"job_status\\\"\\n                      #job_status\\n                      [(ngModel)]=\\\"job.job_status\\\"\\n                      required\\n                    >\\n                      <option></option>\\n                      <option *ngFor=\\\"let status of jobStatus\\\">{{status.list_value}}</option>\\n                    </select>\\n\\n                    <div class=\\\"invalid-feedback\\\">\\n                      You must choose a value!\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"job_worker\\\">Worker Assignment</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"job_worker\\\"\\n                            #job_worker=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':job_worker.errors && job_worker.touched}\\\"\\n                            [(ngModel)]=\\\"job.job_worker\\\"\\n                            minlength=\\\"2\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!job_worker.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!job_worker.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 2 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"job_type\\\">Job Type</label>\\n                        <select\\n                          class=\\\"form-control form-control-sm\\\"\\n                          id=\\\"job_type\\\"\\n                          name=\\\"job_type\\\"\\n                          #job_type\\n                          [(ngModel)]=\\\"job.job_type\\\"\\n                          required\\n                        >\\n                          <option></option>\\n                          <option *ngFor=\\\"let type of jobType\\\">{{type.list_value}}</option>\\n                        </select>\\n\\n                        <div class=\\\"invalid-feedback\\\">\\n                          You must choose a value!\\n                        </div>\\n\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"job_asset\\\">Asset</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"job_asset\\\"\\n                              #job_asset=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':job_asset.errors && job_asset.touched}\\\"\\n                              [(ngModel)]=\\\"job.job_asset\\\"\\n                              required\\n                          >\\n                          <input\\n                              hidden=\\\"true\\\"\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"scheduled_date\\\"\\n                              #scheduled_date=\\\"ngModel\\\"\\n                              [(ngModel)]=\\\"invisibleDate\\\"\\n                          >\\n                          <div [hidden]=\\\"!job_asset.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                          </div>\\n                      </div>\\n                  </div>\\n                </div>\\n                <h3 class=\\\"mt-0 pt-0\\\">Scheduling Details</h3>\\n                <hr>\\n                <!-- <p>{{invisibleDate | date }}</p> -->\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Select Date\\\" (ngModel)=\\\"date\\\" (dateChange)=\\\"addEvent($event)\\\" name=\\\"date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker1></mat-datepicker>\\n                </mat-form-field>\\n\\n\\n\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                  <button type=\\\"submit\\\" value=\\\"Save Job\\\" class=\\\"btn btn-primary mt-4 mr-2 mr-sm-3 mr-md-4 icon-min-w\\\"><i class=\\\"icon ion-md-save mr-1\\\"></i>save job</button>\\n                  <button routerLink=\\\"/company/site/edit/{{site.id}}\\\" type=\\\"button\\\" class=\\\"btn btn-secondary uk-button mt-4 icon-min-w\\\"><i class=\\\"icon ion-md-undo mr-1\\\"></i>cancel job</button>\\n                </div>\\n          </form>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { firestore } from 'firebase';\nimport {FormControl} from '@angular/forms';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { DatePipe } from '@angular/common';\n\nimport { SiteService } from '../../../../services/site.service';\nimport { JobService } from '../../../../services/job.service';\n\nimport { Site } from '../../../../models/site';\nimport { Job } from '../../../../models/job';\nimport { JobTypeList } from '../../../../models/list-job-type';\nimport { JobStatusList } from '../../../../models/list-job-status';\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\n\n@Component({\n  selector: 'app-job-add',\n  templateUrl: './job-add.component.html',\n  styleUrls: ['./job-add.component.css']\n})\nexport class JobAddComponent implements OnInit {\n  date = firestore.Timestamp;\n  serializedDate = new Date();\n  invisibleDate: any;\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n  jobId: string;\n  job: Job = {\n    id: '',\n    job_title:  '',\n    job_description: '',\n    job_asset: '',\n    job_notes: '',\n    job_status: '',\n    job_type: '',\n    job_worker: '',\n    worker_status: '',\n    site_id: ''\n  };\n  jobs: Job[];\n  jobType: JobTypeList[];\n  jobStatus: JobStatusList[];\n\n  constructor(private ss: SiteService, private js: JobService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n    this.job.site_id = this.id;\n    this.ss.getSite(this.id).subscribe(site => {\n      this.site = site;\n    });\n    this.js.getJobTypes().subscribe(jobType => {\n      this.jobType = jobType;\n    });\n    this.js.getJobStatus().subscribe(jobStatus => {\n      this.jobStatus = jobStatus;\n    });\n  }\n\n  onSubmit({value, valid}: {value: Job, valid: boolean}) {\n    if (!valid) {\n      return null;\n    } else {\n      this.js.newJob(value);\n    }\n    this.router.navigate([`/company/site/${this.site.id}`]);\n  }\n\n  addEvent(event) {\n    this.invisibleDate = event.value;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvc2l0ZS9qb2JzL2VkaXQvZWRpdC1qb2IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container uk-margin-small-bottom\\\">\\n    <div class=\\\"uk-card uk-card-default\\\">\\n      <div class=\\\"uk-card-header bg-info\\\">\\n          <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n              <div class=\\\"uk-width-expand\\\">\\n                  <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>Editing Job - {{job.job_title}}</h5>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"uk-card-body\\\">\\n        <small class=\\\"uk-text-muted\\\">Please make required changes and submit to to save them.</small>\\n        <h6 class=\\\"uk-text-bold uk-margin-small-top\\\"><i class=\\\"material-icons uk-text-primary mr-1\\\"></i>Job Details</h6>\\n          <form #jobForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(jobForm)\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"job_title\\\">Job Title</label>\\n              <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"job_title\\\"\\n                  #job_title=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid':job_title.errors && job_title.touched}\\\"\\n                  [(ngModel)]=\\\"job.job_title\\\"\\n                  minlength=\\\"5\\\"\\n                  maxlength=\\\"25\\\"\\n                  required\\n              >\\n              <input\\n                  type=\\\"hidden\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"site_id\\\"\\n                  #site_id=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"job.site_id\\\"\\n              >\\n              <input\\n                  type=\\\"hidden\\\"\\n                  class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"job_id\\\"\\n                  #job_id=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"job.id\\\"\\n              >\\n\\n              <div [hidden]=\\\"!job_title.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                You must provide a value!\\n              </div>\\n              <div [hidden]=\\\"!job_title.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 5 characters minimum please!\\n              </div>\\n              <div [hidden]=\\\"!job_title.errors?.maxlength\\\" class=\\\"invalid-feedback\\\">\\n                  Value must be 25 characters maximum please!\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"job_description\\\">Job Description</label>\\n                <textarea\\n                    type=\\\"text\\\"\\n                    rows=\\\"3\\\"\\n                    class=\\\"form-control form-control-sm\\\"\\n                    name=\\\"job_description\\\"\\n                    #job_description=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid':job_description.errors && job_description.touched}\\\"\\n                    [(ngModel)]=\\\"job.job_description\\\"\\n                    minlength=\\\"10\\\"\\n                    required\\n                ></textarea>\\n\\n                <div [hidden]=\\\"!job_description.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  You must provide a value!\\n                </div>\\n                <div [hidden]=\\\"!job_description.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Value must be 10 characters minimum please!\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"job_description\\\">Job Notes</label>\\n                <textarea\\n                    type=\\\"text\\\"\\n                    rows=\\\"3\\\"\\n                    class=\\\"form-control form-control-sm\\\"\\n                    name=\\\"job_notes\\\"\\n                    #job_notes=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid':job_notes.errors && job_notes.touched}\\\"\\n                    [(ngModel)]=\\\"job.job_notes\\\"\\n                    minlength=\\\"10\\\"\\n                    required\\n                ></textarea>\\n\\n                <div [hidden]=\\\"!job_notes.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  You must provide a value!\\n                </div>\\n                <div [hidden]=\\\"!job_notes.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                    Value must be 10 characters minimum please!\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"job_status\\\">Job Status</label>\\n                      <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control form-control-sm\\\"\\n                          name=\\\"job_status\\\"\\n                          #job_status=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid':job_status.errors && job_status.touched}\\\"\\n                          [(ngModel)]=\\\"job.job_status\\\"\\n                          minlength=\\\"5\\\"\\n                          required\\n                      >\\n\\n                      <div [hidden]=\\\"!job_status.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        You must provide a value!\\n                      </div>\\n                      <div [hidden]=\\\"!job_status.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                          Value must be 5 characters minimum please!\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"job_worker\\\">Worker Assignment</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-sm\\\"\\n                            name=\\\"job_worker\\\"\\n                            #job_worker=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{'is-invalid':job_worker.errors && job_worker.touched}\\\"\\n                            [(ngModel)]=\\\"job.job_worker\\\"\\n                            minlength=\\\"2\\\"\\n                            required\\n                        >\\n\\n                        <div [hidden]=\\\"!job_worker.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                          You must provide a value!\\n                        </div>\\n                        <div [hidden]=\\\"!job_worker.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                            Value must be 2 characters minimum please!\\n                        </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"job_type\\\">Job Type</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"job_type\\\"\\n                              #job_type=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':job_type.errors && job_type.touched}\\\"\\n                              [(ngModel)]=\\\"job.job_type\\\"\\n                              required\\n                          >\\n                          <div [hidden]=\\\"!job_type.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                          </div>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"job_asset\\\">Asset</label>\\n                          <input\\n                              type=\\\"text\\\"\\n                              class=\\\"form-control form-control-sm\\\"\\n                              name=\\\"job_asset\\\"\\n                              #job_asset=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid':job_asset.errors && job_asset.touched}\\\"\\n                              [(ngModel)]=\\\"job.job_asset\\\"\\n                              required\\n                          >\\n                          <div [hidden]=\\\"!job_asset.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              You must provide a value!\\n                          </div>\\n                      </div>\\n                  </div>\\n                </div>\\n\\n            <input type=\\\"submit\\\" value=\\\"Submit Changes\\\" class=\\\"btn btn-info btn-block mt-4\\\">\\n          </form>\\n      </div>\\n      <div class=\\\"uk-card-footer\\\">\\n          <!-- <div class=\\\"uk-card-header bg-primary-dark uk-margin-small-bottom uk-padding-small\\\">\\n              <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                  <div class=\\\"uk-width-expand\\\">\\n                    <div class=\\\"row d-flex align-content-center\\\">\\n                      <div class=\\\"col-md-10\\\">\\n                          <h5 class=\\\"uk-margin-remove-bottom uk-margin-remove-left uk-text-bold text-white\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>Site Location List</h5>\\n                      </div>\\n                      <div class=\\\"col-md-2\\\">\\n                          <a routerLink=\\\"/company/edit/{{main.id}}\\\" class=\\\"uk-button uk-button-text text-white uk-margin-medium-right\\\"><i class=\\\"icon ion-md-add-circle-outline ml-1 mr-1\\\"></i>site</a>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n              </div>\\n          </div>\\n          <ul class=\\\"uk-list uk-list-divider\\\">\\n              <li *ngFor=\\\"let site of sites\\\" class=\\\"uk-margin-small-left\\\">\\n                <div class=\\\"row d-flex align-content-center\\\">\\n                  <div class=\\\"col-md-10 ext-uppercase justify-content-end\\\">\\n                      <a routerLink=\\\"/company/site/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pin ml-1 mr-1\\\"></i>{{site.site_name}}</a>\\n\\n                  </div>\\n                  <div class=\\\"col-md-2 justify-content-end\\\">\\n                      <a routerLink=\\\"/company/site/edit/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-medium-right\\\"><i class=\\\"icon ion-md-create mr-1\\\"></i>edit</a>\\n                  </div>\\n                </div>\\n\\n              </li>\\n          </ul> -->\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { SiteService } from '../../../../services/site.service';\nimport { JobService } from '../../../../services/job.service';\n\nimport { Site } from '../../../../models/site';\nimport { Job } from '../../../../models/job';\n\n@Component({\n  selector: 'app-edit-job',\n  templateUrl: './edit-job.component.html',\n  styleUrls: ['./edit-job.component.css']\n})\nexport class EditJobComponent implements OnInit {\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n  jobId: string;\n  job: Job = {\n    id: '',\n    job_title:  '',\n    job_description: '',\n    job_asset: '',\n    job_notes: '',\n    job_status: '',\n    job_type: '',\n    job_worker: '',\n    site_id: '',\n  };\n  jobs: Job[];\n\n  constructor(private ss: SiteService, private js: JobService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.jobId = this.route.snapshot.params.id;\n    this.id = this.job.site_id;\n    this.js.getJob(this.jobId).subscribe(job => {\n      this.job = job;\n    });\n  }\n\n  onSubmit({value, valid}: {value: Job, valid: boolean}) {\n    if (!valid) {\n      return null;\n    } else {\n      value.id = this.jobId;\n      this.js.updateJob(value);\n    }\n    this.router.navigate([`/company/site/${this.job.site_id}`]);\n  }\n\n}\n","module.exports = \".badge-waiting-parts {\\n  background-color: coral;\\n  color: white;\\n}\\n\\n.badge-waiting-schedule {\\n  background-color: rgb(194, 98, 63);\\n  color: white;\\n}\\n\\n.badge-paused {\\n  background-color: rgb(245, 223, 22);\\n  color: darkslategray;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcGFueS9zaXRlL2pvYnMvbGlzdHMvbGlzdC1qb2JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUI7RUFDdkIsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0NBQWtDO0VBQ2xDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1DQUFtQztFQUNuQyxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcGFueS9zaXRlL2pvYnMvbGlzdHMvbGlzdC1qb2JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFkZ2Utd2FpdGluZy1wYXJ0cyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvcmFsO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5iYWRnZS13YWl0aW5nLXNjaGVkdWxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5NCwgOTgsIDYzKTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYmFkZ2UtcGF1c2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NSwgMjIzLCAyMik7XG4gIGNvbG9yOiBkYXJrc2xhdGVncmF5O1xufVxuXG4ucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container uk-margin-medium-bottom\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"uk-card-header bg-primary-dark\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"material-icons pr-1\\\">place</i>{{site.site_name}} - Jobs List</h5>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"uk-card-body\\\">\\n            <button routerLink=\\\"/company/site/{{site.id}}\\\" type=\\\"button\\\" class=\\\"btn btn-info mb-4\\\">back</button>\\n            <ul uk-accordion class=\\\"mt-2\\\">\\n                <li *ngFor=\\\"let job of jobs\\\" class=\\\"uk-open\\\">\\n                    <a class=\\\"uk-accordion-title uk-text-small uk-text-uppercase pointer\\\">\\n                      <section *ngIf=\\\"job.job_status === 'Started'\\\">\\n                        <span class=\\\"badge badge-success mr-3\\\">\\n                            <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                            {{job.job_number}} - {{job.job_status}}\\n                        </span>\\n                        {{job.job_title}} - Asset: {{job.job_asset}}\\n                      </section>\\n                      <section *ngIf=\\\"job.job_status === 'Paused'\\\">\\n                          <span class=\\\"badge badge-paused mr-3\\\">\\n                              <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                              {{job.job_number}} - {{job.job_status}}\\n                          </span>{{job.job_title}} - Asset: {{job.job_asset}}\\n                      </section>\\n                      <section *ngIf=\\\"job.job_status === 'Waiting Parts'\\\">\\n                          <span class=\\\"badge badge-waiting-parts mr-3\\\">\\n                              <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                              {{job.job_number}} - {{job.job_status}}\\n                          </span>{{job.job_title}} - Asset: {{job.job_asset}}\\n                      </section>\\n                      <section *ngIf=\\\"job.job_status === 'Waiting Schedule'\\\">\\n                          <span class=\\\"badge badge-waiting-schedule mr-3\\\">\\n                              <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                              {{job.job_number}} - {{job.job_status}}\\n                          </span>{{job.job_title}} - Asset: {{job.job_asset}}\\n                      </section>\\n                      <section *ngIf=\\\"job.job_status === 'Closed'\\\">\\n                          <span class=\\\"badge badge-secondary mr-sm-5 mr-md-3\\\">\\n                              <i class=\\\"icon ion-md-construct mr-1\\\"></i>\\n                              {{job.job_number}} - {{job.job_status}}\\n                          </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{job.job_title}} - Asset: {{job.job_asset}}\\n                      </section>\\n\\n                    </a>\\n                    <div class=\\\"uk-accordion-content\\\">\\n                        <div class=\\\"uk-section pt-3 pb-4\\\">\\n                            <div class=\\\"uk-container\\\">\\n\\n                                <div class=\\\"uk-grid-match uk-child-width-1-3@m\\\" uk-grid>\\n                                    <div>\\n                                        <ul class=\\\"uk-list\\\">\\n                                            <li class=\\\"uk-text-small\\\"><strong>Title: </strong>{{job.job_title}}</li>\\n                                            <li class=\\\"uk-text-small\\\"><strong>Asset: </strong>{{job.job_asset}}</li>\\n                                            <li class=\\\"uk-text-small\\\"><strong>Status: </strong>{{job.job_status}}</li>\\n                                            <li class=\\\"uk-text-small\\\"><strong>Type: </strong>{{job.job_type}}</li>\\n                                            <li class=\\\"uk-text-small\\\"><strong>Asigned To: </strong>{{job.job_worker}}</li>\\n                                            <li *ngIf=\\\"job.worker_status === 'On The Job'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-timer text-success ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                            <li *ngIf=\\\"job.worker_status === 'Lunch'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                            <li *ngIf=\\\"job.worker_status === 'Punched Out'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-alarm text-danger ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                            <li *ngIf=\\\"job.worker_status === 'Break'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                            <li *ngIf=\\\"job.worker_status === ''\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-help text-info ml-2 mr-2\\\"></i>Unknown</li>\\n                                        </ul>\\n                                    </div>\\n                                    <div>\\n                                        <p><strong>Description:  </strong>{{job.job_description}}</p>\\n                                    </div>\\n                                    <div>\\n                                        <p><strong>Logs/Notes:  </strong>{{job.job_notes}}</p>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <hr>\\n                </li>\\n            </ul>\\n\\n        </div>\\n        <div class=\\\"card-footer d-flex justify-content-around footer-bg\\\">\\n            <a routerLink=\\\"/company/site/job/add/{{site.id}}\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-add-circle ml-1 mr-1\\\"></i>add job</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-pulse ml-1 mr-1\\\"></i>stats</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text uk-margin-small-right\\\"><i class=\\\"icon ion-md-switch ml-1 mr-1\\\"></i>settings</a>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { SiteService } from '../../../../services/site.service';\nimport { JobService } from '../../../../services/job.service';\n\nimport { Site } from '../../../../models/site';\nimport { Job } from '../../../../models/job';\n\n@Component({\n  selector: 'app-list-jobs',\n  templateUrl: './list-jobs.component.html',\n  styleUrls: ['./list-jobs.component.css']\n})\nexport class ListJobsComponent implements OnInit {\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n  jobId: string;\n  job: Job = {\n    id: '',\n    job_title:  '',\n    job_description: '',\n    job_asset: '',\n    job_notes: '',\n    job_status: '',\n    job_type: '',\n    job_worker: '',\n    site_id: '',\n    worker_status: '',\n    job_number: ''\n  };\n  jobs: Job[];\n\n  constructor(private ss: SiteService, private js: JobService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id;\n    this.ss.getSite(this.id).subscribe(site => {\n      this.site = site;\n    });\n    this.ss.getJobs(this.id).subscribe(jobs => {\n      this.jobs = jobs;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvc2l0ZS9qb2JzL3Nob3cvc2hvdy1qb2IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container uk-margin-medium-bottom\\\">\\n    <div class=\\\"card uk-margin-medium-bottom\\\">\\n        <div class=\\\"card-header bg-info\\\">\\n            <div class=\\\"uk-grid-large uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h5 class=\\\"uk-margin-remove-bottom uk-text-bold text-white\\\"><i class=\\\"icon ion-md-construct text-white mr-2\\\"></i>Job Details and Stats - {{job.job_title}}</h5>\\n                </div>\\n            </div>\\n        </div>\\n            <div class=\\\"uk-section pt-4 pb-4\\\">\\n                <div class=\\\"uk-container\\\">\\n                    <span *ngIf=\\\"!isLoading\\\" uk-spinner=\\\"ratio: 4.5\\\"></span>\\n\\n                    <h3>Job Details</h3>\\n                    <hr>\\n\\n                    <div class=\\\"uk-grid-match uk-child-width-1-3@m\\\" uk-grid>\\n                        <div>\\n                            <ul class=\\\"uk-list\\\">\\n                                <li class=\\\"uk-text-small\\\"><strong>Title: </strong>{{job.job_title}}</li>\\n                                <li class=\\\"uk-text-small\\\"><strong>Asset: </strong>{{job.job_asset}}</li>\\n                                <li class=\\\"uk-text-small\\\"><strong>Status: </strong>{{job.job_status}}</li>\\n                                <li class=\\\"uk-text-small\\\"><strong>Type: </strong>{{job.job_type}}</li>\\n                                <li class=\\\"uk-text-small\\\"><strong>Asigned To: </strong>{{job.job_worker}}</li>\\n                                <li *ngIf=\\\"job.worker_status === 'On The Job'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-timer text-success ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                <li *ngIf=\\\"job.worker_status === 'Lunch'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                <li *ngIf=\\\"job.worker_status === 'Punched Out'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-alarm text-danger ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                <li *ngIf=\\\"job.worker_status === 'Break'\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-pause text-warning ml-2 mr-2\\\"></i>{{job.worker_status}}</li>\\n                                <li *ngIf=\\\"job.worker_status === ''\\\" class=\\\"uk-text-small\\\"><strong>Worker Status: </strong><i class=\\\"icon ion-md-help text-info ml-2 mr-2\\\"></i>Unknown</li>\\n                            </ul>\\n                        </div>\\n                        <div>\\n                            <p><strong>Description:  </strong>{{job.job_description}}</p>\\n                        </div>\\n                        <div>\\n                            <p><strong>Logs/Notes:  </strong>{{job.job_notes}}</p>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        <div class=\\\"card-footer d-flex justify-content-around footer-bg mt-3\\\">\\n            <a routerLink=\\\"/company/site/job/edit/{{job.id}}\\\" class=\\\"uk-button uk-button-text mr-5 ml-5\\\"><i class=\\\"icon ion-md-create ml-1 mr-1\\\"></i>edit</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text mr-5 ml-5\\\"><i class=\\\"icon ion-md-construct ml-1 mr-1\\\"></i>jobs</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text mr-5 ml-5\\\"><i class=\\\"icon ion-md-pulse ml-1 mr-1\\\"></i>stats</a>\\n            <a href=\\\"#\\\" class=\\\"uk-button uk-button-text mr-5 ml-5\\\"><i class=\\\"icon ion-md-switch ml-1 mr-1\\\"></i>settings</a>\\n        </div>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { SiteService } from '../../../../services/site.service';\nimport { JobService } from '../../../../services/job.service';\n\nimport { Site } from '../../../../models/site';\nimport { Job } from '../../../../models/job';\n\n@Component({\n  selector: 'app-show-job',\n  templateUrl: './show-job.component.html',\n  styleUrls: ['./show-job.component.css']\n})\nexport class ShowJobComponent implements OnInit {\n  isLoading: boolean;\n  id: string;\n  site: Site = {\n    id: '',\n    site_name: '',\n    site_address: '',\n    site_city: '',\n    site_state: '',\n    site_zip: '',\n    site_phone: '',\n    site_email: '',\n    site_country: '',\n    site_contact_email: '',\n    site_contact_first_name: '',\n    site_contact_last_name: '',\n    site_contact_phone: '',\n    site_maintenance_contact: '',\n    site_maintenance_email: '',\n    site_maintenance_phone: '',\n    site_ship_to_address: '',\n    site_ship_to_city: '',\n    site_ship_to_state: '',\n    site_ship_to_zip: '',\n    site_ship_to_country: '',\n    site_ship_to_phone: '',\n    site_ship_to_email: ''\n  };\n  jobId: string;\n  job: Job = {\n    id: '',\n    job_title:  '',\n    job_description: '',\n    job_asset: '',\n    job_notes: '',\n    job_status: '',\n    job_type: '',\n    job_worker: '',\n    site_id: '',\n    worker_status: '',\n  };\n  jobs: Job[];\n\n  constructor(private ss: SiteService, private js: JobService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.isLoading = false;\n    console.log(this.isLoading);\n    this.jobId = this.route.snapshot.params.id;\n    this.id = this.job.site_id;\n    this.js.getJob(this.jobId).subscribe(job => {\n      this.job = job;\n    });\n    this.isLoading = true;\n    console.log(this.isLoading);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { LayoutModule } from '@angular/cdk/layout';\n\n//\n// Form Controls\n//\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { MatNativeDateModule } from '@angular/material';\n// import { MatMomentDateModule } from '@angular/material-moment-adapter';\n\n//\n// Navigation\n//\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n//\n// Layout\n//\n\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\n\n//\n// Buttons & Indicators\n//\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n//\n// Popups & Modals\n//\n\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n//\n// Data Table\n//\n\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  imports: [\n\n    BrowserAnimationsModule,\n    HttpClientModule,\n\n    LayoutModule,\n\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n\n    MatNativeDateModule,\n    // MatMomentDateModule,\n\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n\n  ],\n  exports: [\n\n    BrowserAnimationsModule,\n    HttpClientModule,\n\n    LayoutModule,\n\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n\n  ]\n\n})\nexport class AngularMaterialModule { }\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.example-container {\\n  height: 500px;\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n}\\n\\n.example-sidenav-content {\\n  display: flex;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.example-sidenav {\\n   -webkit-user-select: none;\\n      -moz-user-select: none;\\n       -ms-user-select: none;\\n           user-select: none;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.menu-button {\\n  transition: 300ms ease-in-out;\\n  -webkit-transform: rotate(0deg);\\n          transform: rotate(0deg);\\n}\\n\\n.menu-button.rotated {\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n}\\n\\n.submenu {\\n  overflow-y: hidden;\\n  transition: -webkit-transform 300ms ease;\\n  transition: transform 300ms ease;\\n  transition: transform 300ms ease, -webkit-transform 300ms ease;\\n  -webkit-transform: scaleY(0);\\n          transform: scaleY(0);\\n  -webkit-transform-origin: top;\\n          transform-origin: top;\\n  padding-left: 30px;\\n}\\n\\n.submenu.expanded {\\n  -webkit-transform: scaleY(1);\\n          transform: scaleY(1);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktbmF2L215LW5hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG9DQUFvQztBQUN0Qzs7QUFDQTtFQUNFLGFBQWE7RUFDYixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFDQTtHQUNHLHlCQUFpQjtNQUFqQixzQkFBaUI7T0FBakIscUJBQWlCO1dBQWpCLGlCQUFpQjtBQUNwQjs7QUFDQTtFQUNFLFdBQVc7QUFDYjs7QUFDQTtFQUNFLDZCQUE2QjtFQUM3QiwrQkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCOztBQUNBO0VBQ0UsaUNBQXlCO1VBQXpCLHlCQUF5QjtBQUMzQjs7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQix3Q0FBZ0M7RUFBaEMsZ0NBQWdDO0VBQWhDLDhEQUFnQztFQUNoQyw0QkFBb0I7VUFBcEIsb0JBQW9CO0VBQ3BCLDZCQUFxQjtVQUFyQixxQkFBcUI7RUFDckIsa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0UsNEJBQW9CO1VBQXBCLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL215LW5hdi9teS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuLmV4YW1wbGUtc2lkZW5hdi1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5leGFtcGxlLXNpZGVuYXYge1xuICAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG4uZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1lbnUtYnV0dG9uIHtcbiAgdHJhbnNpdGlvbjogMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xufVxuLm1lbnUtYnV0dG9uLnJvdGF0ZWQge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuLnN1Ym1lbnUge1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlO1xuICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG59XG4uc3VibWVudS5leHBhbmRlZCB7XG4gIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xufVxuIl19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n\\t<button mat-icon-button (click)=\\\"isExpanded = !isExpanded\\\"><mat-icon>menu</mat-icon></button>\\n\\t<h1 class=\\\"example-app-name\\\">Nested Menus</h1>\\n</mat-toolbar>\\n<mat-sidenav-container class=\\\"example-container\\\" >\\n\\t<mat-sidenav #sidenav class=\\\"example-sidenav\\\" mode=\\\"side\\\" opened=\\\"true\\\" (mouseenter)=\\\"mouseenter()\\\" (mouseleave)=\\\"mouseleave()\\\">\\n\\t\\t<mat-nav-list>\\n\\t\\t\\t<mat-list-item (click)=\\\"showSubmenu = !showSubmenu\\\" class=\\\"parent\\\">\\n\\t\\t\\t\\t<span class=\\\"full-width\\\" *ngIf=\\\"isExpanded || isShowing\\\">Parent Menu</span>\\n\\t\\t\\t\\t<mat-icon mat-list-icon>home</mat-icon>\\n\\t\\t\\t\\t<mat-icon class=\\\"menu-button\\\" [ngClass]=\\\"{'rotated' : showSubmenu}\\\" *ngIf=\\\"isExpanded || isShowing\\\">expand_more</mat-icon>\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\t<div class=\\\"submenu\\\" [ngClass]=\\\"{'expanded' : showSubmenu}\\\" *ngIf=\\\"isShowing || isExpanded\\\">\\n\\t\\t\\t\\t<a mat-list-item href=\\\"...\\\">Submenu Item 1</a>\\n\\t\\t\\t\\t<a mat-list-item href=\\\"...\\\">Submenu Item 2</a>\\n\\t\\t\\t\\t<mat-list-item (click)=\\\"showSubSubMenu = !showSubSubMenu\\\" class=\\\"parent\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"full-width\\\" *ngIf=\\\"isExpanded || isShowing\\\">Nested Menu</span>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"menu-button\\\" [ngClass]=\\\"{'rotated' : showSubSubMenu}\\\" *ngIf=\\\"isExpanded || isShowing\\\">expand_more</mat-icon>\\n\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t<div class=\\\"submenu\\\" [ngClass]=\\\"{'expanded' : showSubSubMenu}\\\" *ngIf=\\\"isShowing || isExpanded\\\">\\n\\t\\t\\t\\t\\t<mat-list-item>SubSubmenu Item 1</mat-list-item>\\n\\t\\t\\t\\t\\t<mat-list-item>SubSubmenu Item 2</mat-list-item>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</mat-nav-list>\\n    <mat-nav-list>\\n</mat-nav-list>\\n\\t</mat-sidenav>\\n\\n\\t<div class=\\\"example-sidenav-content\\\">\\n\\t\\t<router-outlet></router-outlet>\\n\\t</div>\\n\\n</mat-sidenav-container>\\n\\n\\n<!-- <mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n    <mat-menu #animals=\\\"matMenu\\\">\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\n    </mat-menu>\\n\\n    <mat-menu #vertebrates=\\\"matMenu\\\">\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\n      <button mat-menu-item>Birds</button>\\n      <button mat-menu-item>Mammals</button>\\n    </mat-menu>\\n\\n    <mat-menu #invertebrates=\\\"matMenu\\\">\\n      <button mat-menu-item>Insects</button>\\n      <button mat-menu-item>Molluscs</button>\\n      <button mat-menu-item>Crustaceans</button>\\n      <button mat-menu-item>Corals</button>\\n      <button mat-menu-item>Arachnids</button>\\n      <button mat-menu-item>Velvet worms</button>\\n      <button mat-menu-item>Horseshoe crabs</button>\\n    </mat-menu>\\n\\n    <mat-menu #fish=\\\"matMenu\\\">\\n      <button mat-menu-item>Baikal oilfish</button>\\n      <button mat-menu-item>Bala shark</button>\\n      <button mat-menu-item>Ballan wrasse</button>\\n      <button mat-menu-item>Bamboo shark</button>\\n      <button mat-menu-item>Banded killifish</button>\\n    </mat-menu>\\n\\n    <mat-menu #amphibians=\\\"matMenu\\\">\\n      <button mat-menu-item>Sonoran desert toad</button>\\n      <button mat-menu-item>Western toad</button>\\n      <button mat-menu-item>Arroyo toad</button>\\n      <button mat-menu-item>Yosemite toad</button>\\n    </mat-menu>\\n\\n    <mat-menu #reptiles=\\\"matMenu\\\">\\n      <button mat-menu-item>Banded Day Gecko</button>\\n      <button mat-menu-item>Banded Gila Monster</button>\\n      <button mat-menu-item>Black Tree Monitor</button>\\n      <button mat-menu-item>Blue Spiny Lizard</button>\\n      <button mat-menu-item disabled>Velociraptor</button>\\n    </mat-menu>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"mb-3 shadow-6\\\">\\n      <span><button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        >\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button></span>\\n      <span>uikit-firebase-admin</span>\\n\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container> -->\\n\\n\"","import { Component, ViewChild } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material';\n\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  isExpanded = false;\n  showSubmenu: boolean = false;\n  isShowing = false;\n  showSubSubMenu: boolean = false;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  mouseenter() {\n    if (!this.isExpanded) {\n      this.isShowing = true;\n    }\n  }\n\n  mouseleave() {\n    if (!this.isExpanded) {\n      this.isShowing = false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Job } from '../models/job';\nimport { Site } from '../models/site';\nimport { JobTypeList } from '../models/list-job-type';\nimport { JobStatusList } from '../models/list-job-status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n  jobCollection: AngularFirestoreCollection<Job>;\n  jobDoc: AngularFirestoreDocument<Job>;\n  jobs: Observable<Job[]>;\n  job: Observable<Job>;\n  siteCollection: AngularFirestoreCollection<Site>;\n  siteDoc: AngularFirestoreDocument<Site>;\n  sites: Observable<Site[]>;\n  site: Observable<Site>;\n  jobTypeCollection: AngularFirestoreCollection<JobTypeList>;\n  jobTypeDoc: AngularFirestoreDocument<JobTypeList>;\n  jobTypes: Observable<JobTypeList[]>;\n  jobType: Observable<JobTypeList>;\n  jobStatusCollection: AngularFirestoreCollection<JobStatusList>;\n  jobStatusDoc: AngularFirestoreDocument<JobStatusList>;\n  jobStatuses: Observable<JobStatusList[]>;\n  jobStatus: Observable<JobStatusList>;\n\n  constructor(private afs: AngularFirestore) {\n    this.jobCollection = this.afs.collection('site_jobs', ref => ref.orderBy('job_title'));\n    this.siteCollection = this.afs.collection('site_locations', ref => ref.orderBy('site_name'));\n    this.jobTypeCollection = this.afs.collection('job_type_list');\n    this.jobStatusCollection = this.afs.collection('job_status_list');\n  }\n\n  getSites(): Observable<Site[]> {\n    this.sites = this.siteCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(action => {\n        const data = action.payload.doc.data() as Site;\n        const id = action.payload.doc.id;\n        return { id, ...data };\n      });\n    }));\n\n    return this.sites;\n}\n\n  getSite(id: string): Observable<Site> {\n    this.siteDoc = this.afs.doc<Site>(`site_locations/${id}`);\n    this.site = this.siteDoc.snapshotChanges().pipe(map(action => {\n      if (action.payload.exists === false) {\n        return null;\n      } else {\n        const data = action.payload.data() as Site;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n\n    return this.site;\n  }\n\n  getJob(id: string): Observable<Job> {\n    this.jobDoc = this.afs.doc<Job>(`site_jobs/${id}`);\n    this.job = this.jobDoc.snapshotChanges().pipe(map(action => {\n      if (action.payload.exists === false) {\n        return null;\n      } else {\n        const data = action.payload.data() as Job;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n\n    return this.job;\n  }\n\n  getJobs(): Observable<Job[]> {\n    this.jobs = this.jobCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(action => {\n        const data = action.payload.doc.data() as Job;\n        const id = action.payload.doc.id;\n        return { id, ...data };\n      });\n    }));\n\n    return this.jobs;\n  }\n\n  newJob(job: Job) {\n    this.jobCollection.add(job);\n  }\n\n  updateJob(job: Job) {\n    this.jobDoc = this.afs.doc(`site_jobs/${job.id}`);\n    this.jobDoc.update(job);\n  }\n\n  getJobTypes(): Observable<JobTypeList[]> {\n    this.jobTypes = this.jobTypeCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(action => {\n        const data = action.payload.doc.data() as JobTypeList;\n        const id = action.payload.doc.id;\n        return { id, ...data };\n      });\n    }));\n\n    return this.jobTypes;\n}\n\ngetJobStatus(): Observable<JobStatusList[]> {\n  this.jobStatuses = this.jobStatusCollection.snapshotChanges().pipe(map(actions => {\n    return actions.map(action => {\n      const data = action.payload.doc.data() as JobStatusList;\n      const id = action.payload.doc.id;\n      return { id, ...data };\n    });\n  }));\n\n  return this.jobStatuses;\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { firestore } from 'firebase';\n\n/**\n * NgbDateAdapter implementation that allows using Firebase Firestore TimeStamp as a user date model.\n * https://firebase.google.com/docs/reference/js/firebase.firestore.Timestamp\n */\n@Injectable()\nexport class NgbDateFirestoreAdapter extends NgbDateAdapter<firestore.Timestamp> {\n/**\n   * Converts Firestore TimeStamp to a NgbDateStruct\n   */\n\n  fromModel(ts: firestore.Timestamp): NgbDateStruct {\n    if (ts instanceof firestore.Timestamp) {\n      return {\n        year: ts.toDate().getFullYear(),\n        month: ts.toDate().getMonth() + 1,\n        day: ts.toDate().getDate()\n      };\n    } else return null;\n  }\n\n  /**\n   * Converts a NgbDateStruct to a Firestore TimeStamp\n   */\n  toModel(ngbDate: NgbDateStruct): firestore.Timestamp {\n    const jsDate = new Date(\n      ngbDate.year ? ngbDate.year : new Date().getFullYear(),\n      ngbDate.month ? ngbDate.month - 1 : new Date().getMonth() - 1,\n      ngbDate.day ? ngbDate.day : new Date().getDate(),\n      12\n    );\n    return firestore.Timestamp.fromDate(jsDate);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { Site } from '../models/site';\nimport { Main } from '../models/main';\nimport { Job } from '../models/job';\nimport { Asset } from '../models/asset';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SiteService {\n  id: string;\n  siteCollection: AngularFirestoreCollection<Site>;\n  siteDoc: AngularFirestoreDocument<Site>;\n  sites: Observable<Site[]>;\n  site: Observable<Site>;\n  mainCollection: AngularFirestoreCollection<Main>;\n  mainDoc: AngularFirestoreDocument<Main>;\n  mains: Observable<Main[]>;\n  main: Observable<Main>;\n  jobsCollection: AngularFirestoreCollection<Job>;\n  jobCollection: AngularFirestoreCollection<Job>;\n  jobDoc: AngularFirestoreDocument<Job>;\n  jobs: Observable<Job[]>;\n  job: Observable<Job>;\n  assetCollection: AngularFirestoreCollection<Asset>;\n  assetDoc: AngularFirestoreDocument<Asset>;\n  assets: Observable<Asset[]>;\n  asset: Observable<Asset>;\n\n  constructor(private afs: AngularFirestore, private route: ActivatedRoute) {\n    this.siteCollection = this.afs.collection('site_locations', ref => ref.orderBy('site_name'));\n    this.mainCollection = this.afs.collection('main_company', ref => ref.orderBy('company_name'));\n    this.jobCollection = this.afs.collection('site_jobs', ref => ref.orderBy('job_title'));\n  }\n\n  getSites(): Observable<Site[]> {\n    this.sites = this.siteCollection.snapshotChanges().pipe(map(actions => {\n      return actions.map(action => {\n        const data = action.payload.doc.data() as Site;\n        const id = action.payload.doc.id;\n        return { id, ...data };\n      });\n    }));\n\n    return this.sites;\n}\n\ngetMains(): Observable<Main[]> {\n  this.mains = this.mainCollection.snapshotChanges().pipe(map(actions => {\n    return actions.map(action => {\n      const data = action.payload.doc.data() as Main;\n      const id = action.payload.doc.id;\n      return { id, ...data };\n    });\n  }));\n\n  return this.mains;\n\n}\n\ngetJobs(id: string): Observable<Job[]> {\n  this.jobsCollection = this.afs.collection('site_jobs', ref => ref.where('site_id', '==', id));\n  this.jobs = this.jobsCollection.snapshotChanges().pipe(map(actions => {\n    return actions.map(action => {\n      const data = action.payload.doc.data() as Job;\n      const id = action.payload.doc.id;\n      return { id, ...data };\n    });\n  }));\n\n  return this.jobs;\n}\n\ngetMain(id: string): Observable<Main> {\n  this.mainDoc = this.afs.doc<Main>(`main_company/${id}`);\n  this.main = this.mainDoc.snapshotChanges().pipe(map(action => {\n    if (action.payload.exists === false) {\n      return null;\n    } else {\n      const data = action.payload.data() as Main;\n      data.id = action.payload.id;\n      return data;\n    }\n  }));\n\n  return this.main;\n}\n\ngetSite(id: string): Observable<Site> {\n  this.siteDoc = this.afs.doc<Site>(`site_locations/${id}`);\n  this.site = this.siteDoc.snapshotChanges().pipe(map(action => {\n    if (action.payload.exists === false) {\n      return null;\n    } else {\n      const data = action.payload.data() as Site;\n      data.id = action.payload.id;\n      return data;\n    }\n  }));\n\n  return this.site;\n}\n\ngetAssets(id: string): Observable<Asset[]> {\n  this.assetCollection = this.afs.collection('site_assets', ref => ref.where('asset_site_id', '==', id));\n  this.assets = this.assetCollection.snapshotChanges().pipe(map(actions => {\n    return actions.map(action => {\n      const data = action.payload.doc.data() as Asset;\n      const id = action.payload.doc.id;\n      return { id, ...data };\n    });\n  }));\n\n  return this.assets;\n}\n\nupdateMain(main: Main) {\n  this.mainDoc = this.afs.doc(`main_company/${main.id}`);\n  this.mainDoc.update(main);\n}\n\nupdateSite(site: Site) {\n  this.siteDoc = this.afs.doc(`site_locations/${site.id}`);\n  this.siteDoc.update(site);\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRpYy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<nav class=\\\"uk-navbar-container bk-color uk-light uk-box-shadow-large uk-margin-medium-bottom\\\" uk-navbar>\\n    <div class=\\\"uk-navbar-left uk-margin-large-left\\\">\\n        <a class=\\\"uk-navbar-toggle\\\" uk-toggle=\\\"target: #offcanvas-nav\\\"><span class=\\\"uk-icon uk-margin-small-left\\\" uk-icon=\\\"icon: menu\\\"></span></a>\\n        <a class=\\\"uk-navbar-item uk-logo\\\" href=\\\"#\\\">overzien</a>\\n    </div>\\n\\n        <div class=\\\"uk-navbar-right uk-visible@m uk-margin-large-right\\\">\\n\\n        <ul class=\\\"uk-navbar-nav\\\">\\n            <li>\\n                <a href=\\\"#\\\">\\n                    <span class=\\\"uk-icon uk-margin-small-right\\\" uk-icon=\\\"icon: mail\\\"></span>\\n                    Features\\n                </a>\\n            </li>\\n        </ul>\\n\\n        <div class=\\\"uk-navbar-item\\\">\\n            <div><span class=\\\"uk-icon uk-margin-small-right\\\" uk-icon=\\\"icon: cog\\\"></span><a href=\\\"#\\\">My Settings</a></div>\\n        </div>\\n        <div class=\\\"uk-navbar-item\\\">\\n          <div><span class=\\\"uk-icon uk-margin-small-right\\\" uk-icon=\\\"icon: sign-in\\\"></span><a href=\\\"#\\\">Login</a></div>\\n        </div>\\n        <div class=\\\"uk-navbar-item\\\">\\n          <div><span class=\\\"uk-icon uk-margin-small-right\\\" uk-icon=\\\"icon: sign-out\\\"></span><a href=\\\"#\\\">Logout</a></div>\\n        </div>\\n        <div class=\\\"uk-navbar-item\\\">\\n        <div class=\\\"uk-width-auto\\\">\\n          <img class=\\\"uk-comment-avatar\\\" width=\\\"20\\\" height=\\\"20\\\" src=\\\"../../../assets/images/dude.png\\\"><a class=\\\"uk-link-reset\\\" href=\\\"#\\\" class=\\\"uk-text-small uk-margin-small-left\\\">John Doe</a>\\n      </div></div>\\n\\n    </div>\\n  </nav>\\n\"","module.exports = \".bk-color {\\n  background: linear-gradient(to left, #0e334b, #012e5a); }\\n\\nmat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n  height: 100%; }\\n\\nmat-sidenav {\\n  width: 250px; }\\n\\na {\\n  text-decoration: none;\\n  color: white; }\\n\\na:hover,\\na:active {\\n  color: lightgray; }\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer; }\\n\\n.icon {\\n  display: inline-block;\\n  height: 14px;\\n  font-size: 14px;\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n.label {\\n  display: inline-block;\\n  line-height: 14px;\\n  font-size: 14px;\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb25ib3phcnRoL0RvY3VtZW50cy9VaUtpdF9GaXJlYmFzZS91aWtpdC1maXJlYmFzZS1hZG1pbi9zcmMvYXBwL3N0YXRpYy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0RBQXNELEVBQUE7O0FBRXhEO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UscUJBQXFCO0VBQ3JCLFlBQVksRUFBQTs7QUFHZDs7RUFFRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFNBQVM7RUFDVCxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N0YXRpYy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJrLWNvbG9yIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICMwZTMzNGIsICMwMTJlNWEpO1xufVxubWF0LXNpZGVuYXYtY29udGFpbmVyLCBtYXQtc2lkZW5hdi1jb250ZW50LCBtYXQtc2lkZW5hdiB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxubWF0LXNpZGVuYXYge1xuICB3aWR0aDogMjUwcHg7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuYTpob3ZlcixcbmE6YWN0aXZlIHtcbiAgY29sb3I6IGxpZ2h0Z3JheTtcbn1cblxuLm5hdmlnYXRpb24taXRlbXMge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMTRweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuIl19 */\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  @Output() toggleSidenav = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".bk-color {\\n  background: linear-gradient(to left, #000833, #060e16);\\n}\\n\\n.cm-anchor {\\n  text-decoration: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdGljL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0RBQXNEO0FBQ3hEOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvc3RhdGljL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJrLWNvbG9yIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICMwMDA4MzMsICMwNjBlMTYpO1xufVxuXG4uY20tYW5jaG9yIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuIl19 */\"","module.exports = \"<div id=\\\"offcanvas-nav\\\" uk-offcanvas=\\\"mode: slide; overlay: true; container: true\\\">\\n\\n    <div class=\\\"uk-offcanvas-bar bk-color\\\">\\n        <button class=\\\"uk-offcanvas-close\\\" type=\\\"button\\\" uk-close></button>\\n\\n        <article class=\\\"uk-comment uk-margin-medium-top\\\">\\n            <header class=\\\"uk-comment-header uk-grid-medium uk-flex-middle\\\" uk-grid>\\n                <div class=\\\"uk-width-auto\\\">\\n                    <img class=\\\"uk-comment-avatar\\\" width=\\\"40\\\" height=\\\"40\\\" src=\\\"../../../assets/images/dude.png\\\">\\n                </div>\\n                <div class=\\\"uk-width-expand\\\">\\n                    <h6 class=\\\"uk-comment-title uk-margin-remove\\\"><a class=\\\"uk-link-reset\\\" href=\\\"#\\\" class=\\\"uk-text-small\\\">John Doe</a></h6>\\n                    <ul class=\\\"uk-subnav uk-subnav-divider uk-margin-remove-top\\\">\\n                        <li><a href=\\\"#\\\" class=\\\"uk-text-small\\\"><span class=\\\"uk-icon uk-margin-auto\\\" uk-icon=\\\"icon: mail\\\"></span></a></li>\\n                        <li><a href=\\\"#\\\" class=\\\"uk-text-small\\\"><span class=\\\"uk-icon uk-margin-auto\\\" uk-icon=\\\"icon: cog\\\"></span></a></li>\\n                        <li><a href=\\\"#\\\" class=\\\"uk-text-small\\\"><span class=\\\"uk-icon uk-margin-auto\\\" uk-icon=\\\"icon: sign-out\\\"></span></a></li>\\n                    </ul>\\n                </div>\\n            </header>\\n        </article>\\n\\n        <hr>\\n\\n        <ul uk-accordion>\\n            <li class=\\\"uk-close\\\">\\n                <a routerLink=\\\"/company\\\" class=\\\"uk-accordion-title uk-text-small\\\" href=\\\"#\\\">My Company</a>\\n                <div class=\\\"uk-accordion-content uk-margin-small-left\\\">\\n                    <ul class=\\\"uk-list uk-text-small\\\">\\n                      <li><a routerLink=\\\"/company/edit\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: table\\\"></span>Edit Company</a></li>\\n                      <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: thumbnails\\\"></span>User Management</a></li>\\n                    </ul>\\n                </div>\\n            </li>\\n            <li>\\n                <a class=\\\"uk-accordion-title uk-text-small\\\" href=\\\"#\\\">Production</a>\\n                <div class=\\\"uk-accordion-content\\\">\\n                    <ul class=\\\"uk-list uk-text-small uk-margin-small-left\\\">\\n                        <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: file-text\\\"></span>Quotes</a></li>\\n                        <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: arrow-right\\\"></span>Incoming</a></li>\\n                        <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: play\\\"></span>WIP</a></li>\\n                        <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><span class=\\\"uk-margin-small-right\\\" uk-icon=\\\"icon: arrow-left\\\"></span>Outgoing</a></li>\\n                    </ul>\\n                </div>\\n            </li>\\n            <li>\\n                <a class=\\\"uk-accordion-title uk-text-small\\\" href=\\\"#\\\">Asset Maintenance</a>\\n                <div class=\\\"uk-accordion-content\\\">\\n                    <div class=\\\"uk-width-1-2@s uk-width-2-5@m\\\">\\n                        <ul class=\\\"uk-list uk-text-small uk-margin-small-left\\\">\\n                            <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><i class=\\\"icon ion-ios-build uk-margin-small-right uk-margin-small-left\\\"></i>Break Fix</a></li>\\n                            <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><i class=\\\"icon ion-ios-construct uk-margin-small-right uk-margin-small-left\\\"></i>PMM</a></li>\\n                            <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><i class=\\\"icon ion-ios-clipboard uk-margin-small-right uk-margin-small-left\\\"></i>WIP</a></li>\\n                            <li><a href=\\\"#\\\" class=\\\"cm-anchor uk-text-muted\\\"><i class=\\\"icon ion-ios-speedometer uk-margin-small-right uk-margin-small-left\\\"></i>Charts</a></li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCUofVQ1dhk_AHm0v8H7g-t1ns0Saxckn8',\n    authDomain: 'uikit-fb.firebaseapp.com',\n    databaseURL: 'https://uikit-fb.firebaseio.com',\n    projectId: 'uikit-fb',\n    storageBucket: 'uikit-fb.appspot.com',\n    messagingSenderId: '1079399741132'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}